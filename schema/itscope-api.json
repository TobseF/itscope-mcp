{
  "openapi": "3.0.1",
  "info": {
    "title": "ITscope - Interactive API",
    "termsOfService": "https://cdn.itscope.com/documents/19/12446/ITscope-AGB-Mai-2023.pdf",
    "contact": {
      "name": "ITscope GmbH",
      "url": "https://www.itscope.com",
      "email": "support@itscope.com"
    },
    "license": {
      "name": "ITscope Licence",
      "url": "https://cdn.itscope.com/documents/19/12446/ITscope-AGB-Mai-2023.pdf"
    },
    "version": "2.1"
  },
  "servers": [
    {
      "url": "https://api.itscope.com/2.1"
    }
  ],
  "tags": [
    {
      "name": "businessdocuments",
      "description": "Operations about business documents"
    },
    {
      "name": "businesscarts",
      "description": "operations about the shopping cart"
    },
    {
      "name": "company",
      "description": "Operations about companies"
    },
    {
      "name": "businessdeals-purchase",
      "description": "Operations about purchase orders"
    },
    {
      "name": "businessdeals-sales",
      "description": "Operations about sales orders"
    },
    {
      "name": "businessdeals",
      "description": "Operations about deals"
    },
    {
      "name": "info",
      "description": "General operations"
    },
    {
      "name": "products",
      "description": "Operations about products"
    },
    {
      "name": "businessquotes",
      "description": "Operations about quotes"
    }
  ],
  "paths": {
    "/business/documents/{transactionId}/{view}.{type}": {
      "get": {
        "tags": [
          "businessdocuments"
        ],
        "summary": "Fetch business documents by an ITscope Transaction ID",
        "description": "Fetch certain business documents by an ITscope Transaction ID. The current document format is openTRANS 2.1",
        "operationId": "getDocumentById",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "ITscope transaction ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view",
            "in": "path",
            "description": "View (document)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "ORDER",
              "enum": [
                "QUOTATION",
                "ORDER",
                "ORDERRESPONSE",
                "DISPATCHNOTIFICATION",
                "INVOICE"
              ]
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "pdf"
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Header parameter for the datasheet language",
            "schema": {
              "type": "string",
              "default": "de",
              "enum": [
                "de",
                "en"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Business documents"
          },
          "204": {
            "description": "Transaction ID not found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan. / The current plan is not sufficient for this action."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/documents/{orderId}.{type}": {
      "get": {
        "tags": [
          "businessdocuments"
        ],
        "summary": "Fetch all business documents by an ITscope purchase order ID in one zip file",
        "description": "Fetch all business documents by an ITscope purchase order ID as PDF or openTRANS 2.1 in one zip file",
        "operationId": "getDocumentsById",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "pdf"
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Header parameter for the datasheet language",
            "schema": {
              "type": "string",
              "default": "de",
              "enum": [
                "de",
                "en"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Business documents"
          },
          "204": {
            "description": "Transaction ID not found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/documents/validate": {
      "post": {
        "tags": [
          "businessdocuments"
        ],
        "summary": "Validate order documents in openTRANS v2.1 format semantically",
        "description": "ORDER documents in the openTRANS v2.1 format can be checked whether they are semantically correct for ITscope.",
        "operationId": "validate",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "object"
              }
            },
            "text/xml": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Validation not successful"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/documents/validateBmecat12": {
      "post": {
        "tags": [
          "businessdocuments"
        ],
        "operationId": "validateBmecat12Schema",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "object"
              }
            },
            "text/xml": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/xml": {},
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/documents/validateschema": {
      "post": {
        "tags": [
          "businessdocuments"
        ],
        "summary": "Validate documents in openTRANS V2.1 format against the openTRANS schema",
        "description": "Documents of type ORDER, ORDERRESPONSE, DISPATCHNOTIFICATION, INVOICE and QUOTATION can be checked whether they are in the valid openTRANS 2.1 format according to the openTRANS schema.",
        "operationId": "validateSchema",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "object"
              }
            },
            "text/xml": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Validation not successful"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/carts/{cartId}/cartlineitems": {
      "post": {
        "tags": [
          "businesscarts"
        ],
        "summary": "Add products to the cart",
        "description": "Add one or more products with a given quantity to the shopping cart. If no supplier is given, then ITscope will determine your partner supplier with the lowest price.",
        "operationId": "addLineItem",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "ITscope cart ID. Use \"pool\" to access the pool",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optimisationStrategy",
            "in": "query",
            "description": "Optionally optimise the cart after the line items have been added using the selected strategy.",
            "schema": {
              "type": "string",
              "enum": [
                "manual",
                "minprice",
                "minpricepartner",
                "minsuppliers"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "List of one of the following combinations: Quantity (greater than 0) and: a) ITscope product ID (puid) with an optional supplier ID and optional supplierItemId OR b) supplier ID and supplier item ID. The supplier IDs can be retrieved via GET /company/distributor/, the supplier item ID is the proprietary product number of the supplier.",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CartLineItemOrderContainer"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartLineItemOrderContainer"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid input: The data provided by the input file is invalid"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "The current plan is not sufficient for this action."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/carts/archive/{cartId}": {
      "put": {
        "tags": [
          "businesscarts"
        ],
        "summary": "Archive cart",
        "description": "Archive a cart by a specific cart id",
        "operationId": "archiveCart",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "ITscope cart ID. Use \"pool\" to access the pool",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "The current plan is not sufficient for this action."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/carts": {
      "post": {
        "tags": [
          "businesscarts"
        ],
        "summary": "Create a cart",
        "description": "Create a shopping cart with the given name. The cart will be assigned to the user making the request.",
        "operationId": "createCart",
        "requestBody": {
          "description": "The cart's name",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CartOrder"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartOrder"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid input: The data provided by the input file is invalid"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "The current plan is not sufficient for this action."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/carts/{cartId}": {
      "put": {
        "tags": [
          "businesscarts"
        ],
        "summary": "Edit a cart",
        "description": "Edit a shopping cart. The pool cannot be edited.",
        "operationId": "editCart",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "ITscope cart ID. \"pool\" is not accepted here",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The cart's name",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CartOrder"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartOrder"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid input: The data provided by the input file is invalid"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "The current plan is not sufficient for this action."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "businesscarts"
        ],
        "summary": "Remove a cart",
        "description": "Remove a shopping cart and all its line items. The pool cannot be removed.",
        "operationId": "removeCart",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "ITscope cart ID. \"pool\" is not accepted here",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "The current plan is not sufficient for this action."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/carts/{cartId}/{view}.{type}": {
      "get": {
        "tags": [
          "businesscarts"
        ],
        "summary": "Show cart",
        "description": "Show basic cart information with cart.xml or cart.json. Show cart line items with cartlineitems.xml or cartlineitems.json.",
        "operationId": "getCartInfo",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "ITscope cart ID. Use \"pool\" to access the pool",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view",
            "in": "path",
            "description": "View (document)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "cart",
              "enum": [
                "cart",
                "cartlineitems"
              ]
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json"
              ]
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "The current plan is not sufficient for this action."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/carts/{view}.{type}": {
      "get": {
        "tags": [
          "businesscarts"
        ],
        "summary": "List all carts",
        "description": "List all shopping carts.",
        "operationId": "listCarts",
        "parameters": [
          {
            "name": "view",
            "in": "path",
            "description": "View (document)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "cart",
              "enum": [
                "cart"
              ]
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "archiv",
            "in": "query",
            "description": "Filter for the archive flag: ARCHIVED: archived, NOTARCHIVED: not archived",
            "schema": {
              "type": "string",
              "default": "NOTARCHIVED",
              "enum": [
                "ARCHIVED",
                "NOTARCHIVED"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Large result sets are bundled in multiple pages with 50 results per page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "The current plan is not sufficient for this action."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/carts/{cartId}/optimise": {
      "put": {
        "tags": [
          "businesscarts"
        ],
        "summary": "Optimise cart",
        "description": "Optimise the shopping cart using the given strategy. The updated line items will be returned.",
        "operationId": "optimise",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "ITscope cart ID. Use \"pool\" to access the pool",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optimisationStrategy",
            "in": "query",
            "description": "The strategy to use for optimising the cart",
            "required": true,
            "schema": {
              "type": "string",
              "default": "minprice",
              "enum": [
                "manual",
                "minprice",
                "minpricepartner",
                "minsuppliers"
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input: The data provided by the input file is invalid"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "The current plan is not sufficient for this action."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/carts/{cartId}/cartlineitems/{lineItemId}": {
      "delete": {
        "tags": [
          "businesscarts"
        ],
        "summary": "Remove products from the cart",
        "description": "Remove a line item from your shopping cart.",
        "operationId": "removeLineItem",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "ITscope cart ID. Use \"pool\" to access the pool",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineItemId",
            "in": "path",
            "description": "ITscope shopping cart line item ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "The current plan is not sufficient for this action."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/company/distributor/{view}.{type}": {
      "get": {
        "tags": [
          "company"
        ],
        "summary": "List of all distributors",
        "description": "A list of all distributors for master data mappings",
        "operationId": "queryDistributors",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "view",
            "in": "path",
            "description": "View (scope of data)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "company",
              "enum": [
                "company",
                "eservices"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of companies",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "companies",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/company"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "companies",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/company"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No company found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/company/manufacturer/{view}.{type}": {
      "get": {
        "tags": [
          "company"
        ],
        "summary": "List of all manufacturers",
        "description": "A liste of all manufacturers for master data mappings",
        "operationId": "queryManufacturers",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "view",
            "in": "path",
            "description": "View (scope of data)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "company",
              "enum": [
                "company",
                "eservices"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of companies",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "companies",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/company"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "companies",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/company"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No company found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/advise/{dealId}": {
      "put": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Advise specific order",
        "description": "Advise an order by a specific order id, a valid OPENTRANS 2.1 document of type DISPATCHNOTIFICATION will be created automatically",
        "operationId": "adviseDeal",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suppressMail",
            "in": "query",
            "description": "Supress the sending of status update mails to the buyer",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found orders"
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Advise an order with an OPENTRANS 2.1 DISPATCHNOTIFICATION document",
        "description": "Send a valid OPENTRANS 2.1 document of type DISPATCHNOTIFICATION to advise or partially advise an order by a specific order id",
        "operationId": "adviseDealPost",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suppressMail",
            "in": "query",
            "description": "Supress the sending of status update mails to the buyer",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of found orders"
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/archive/{dealId}": {
      "put": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Archive order",
        "description": "Archive an order by a specific order id",
        "operationId": "archiveDeal",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found orders"
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/cancel/{dealId}": {
      "put": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Cancel specific order",
        "description": "Cancel an order by a specific order id, a valid OPENTRANS 2.1 document of type ORDERRESPONSE will be created automatically",
        "operationId": "cancelDeal",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suppressMail",
            "in": "query",
            "description": "Supress the sending of status update mails to the buyer",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found orders"
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/confirm/{dealId}": {
      "put": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Confirm specific order",
        "description": "Confirm an order by a specific order id, a valid OPENTRANS 2.1 document of type ORDERRESPONSE will be created automatically",
        "operationId": "confirmDeal",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suppressMail",
            "in": "query",
            "description": "Supress the sending of status update mails to the buyer",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found orders"
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Confirm an order with an OPENTRANS 2.1 ORDERRESPONSE document",
        "description": "Send a valid OPENTRANS 2.1 document of type ORDERRESPONSE to confirm or reject or cancel an order by a specific order id",
        "operationId": "confirmDealPost",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suppressMail",
            "in": "query",
            "description": "Supress the sending of status update mails to the buyer",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "string"
              }
            },
            "text/xml": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of found orders"
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/{dealId}/{view}.{type}": {
      "get": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Fetch an order by the ITscope order ID",
        "description": "Fetch single orders by ITscope order ID. Links to the corresponding openTRANS 2.1 documents are in the response.",
        "operationId": "getDealByOrderId",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view",
            "in": "path",
            "description": "View (document)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "deal",
              "enum": [
                "deal"
              ]
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json",
                "pdf"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "deals",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/deal"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "deals",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/deal"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/{view}.{type}": {
      "get": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Fetch list of orders [DEPRECATED]",
        "description": "Fetch a list of orders and their statuses - Instead of this, please use the corresponding method for /sales or /purchase",
        "operationId": "getDealList",
        "parameters": [
          {
            "name": "view",
            "in": "path",
            "description": "View (document)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "deal",
              "enum": [
                "deal"
              ]
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "lastUpdateDateFrom",
            "in": "query",
            "description": "The start date of last update data in the format yyyy-MM-ddThh:mm:ss. Timezone information is optional yyyy-MM-ddThh:mm:ss±hh:mm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastUpdateDateTo",
            "in": "query",
            "description": "The end date of last update data in the format yyyy-MM-ddThh:mm:ss. Default value is the actual date. Timezone information is optional yyyy-MM-ddThh:mm:ss±hh:mm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archiv",
            "in": "query",
            "description": "Filter for the archive flag: ARCHIVED: archived, NOTARCHIVED: not archived",
            "required": true,
            "schema": {
              "type": "string",
              "default": "NOTARCHIVED",
              "enum": [
                "ARCHIVED",
                "NOTARCHIVED"
              ]
            }
          },
          {
            "name": "businessType",
            "in": "query",
            "description": "Filter for the business type: PURCHASE: outgoing deals, for sellers - SALE: ingoing deals, for resellers",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PURCHASE",
              "enum": [
                "PURCHASE",
                "SALE"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the received orders",
            "schema": {
              "type": "string",
              "default": "LAST_MODIFIED",
              "enum": [
                "LAST_MODIFIED",
                "SENT_DESC",
                "SENT_ASC",
                "SUPPLIER",
                "ID"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Large result sets are bundled in multiple pages with 50 results per page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found orders",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "deals",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/deal"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "deals",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/deal"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "deprecated": true,
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/purchase/{view}.{type}": {
      "get": {
        "tags": [
          "businessdeals-purchase",
          "businessdeals"
        ],
        "summary": "Fetch list of purchase orders",
        "description": "Fetch list of purchase orders",
        "operationId": "getOrderList",
        "parameters": [
          {
            "name": "view",
            "in": "path",
            "description": "View (document)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "deal",
              "enum": [
                "deal"
              ]
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "lastUpdateDateFrom",
            "in": "query",
            "description": "The start date of last update data in the format yyyy-MM-ddThh:mm:ss. Timezone information is optional yyyy-MM-ddThh:mm:ss±hh:mm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastUpdateDateTo",
            "in": "query",
            "description": "The end date of last update data in the format yyyy-MM-ddThh:mm:ss. Default value is the actual date. Timezone information is optional yyyy-MM-ddThh:mm:ss±hh:mm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archiv",
            "in": "query",
            "description": "Filter for the archive flag: ARCHIVED: archived, NOTARCHIVED: not archived",
            "required": true,
            "schema": {
              "type": "string",
              "default": "NOTARCHIVED",
              "enum": [
                "ARCHIVED",
                "NOTARCHIVED"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the received orders",
            "schema": {
              "type": "string",
              "default": "LAST_MODIFIED",
              "enum": [
                "LAST_MODIFIED",
                "SENT_DESC",
                "SENT_ASC",
                "SUPPLIER",
                "ID"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Large result sets are bundled in multiple pages with 50 results per page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found orders",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "deals",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/deal"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "deals",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/deal"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/purchase/send": {
      "post": {
        "tags": [
          "businessdeals-purchase",
          "businessdeals"
        ],
        "summary": "Send a new order via ITscope",
        "description": "Send a new order in valid openTRANS 2.1 format via ITscope to a distributor",
        "operationId": "newDeal",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "object"
              }
            },
            "text/xml": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/purchase/search/{filter}/{view}.{type}": {
      "get": {
        "tags": [
          "businessdeals-purchase",
          "businessdeals"
        ],
        "summary": "Search purchase orders with filters",
        "description": "Search purchase orders with filters",
        "operationId": "searchOrders",
        "parameters": [
          {
            "name": "view",
            "in": "path",
            "description": "View (document)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "deal",
              "enum": [
                "deal"
              ]
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "filter",
            "in": "path",
            "description": "Possible criteria are keywords, orderId, ownOrderId, customerOrderId, cartId e.g. orderId=11SRRK-150126-1136.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastUpdateDateFrom",
            "in": "query",
            "description": "The start date of last update data in the format yyyy-MM-ddThh:mm:ss. Timezone information is optional yyyy-MM-ddThh:mm:ss±hh:mm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastUpdateDateTo",
            "in": "query",
            "description": "The end date of last update data in the format yyyy-MM-ddThh:mm:ss. Default value is the actual date. Timezone information is optional yyyy-MM-ddThh:mm:ss±hh:mm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archiv",
            "in": "query",
            "description": "Filter for the archive flag: ARCHIVED: archived, NOTARCHIVED: not archived",
            "schema": {
              "type": "string",
              "default": "NOTARCHIVED",
              "enum": [
                "ARCHIVED",
                "NOTARCHIVED"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the received orders",
            "schema": {
              "type": "string",
              "default": "LAST_MODIFIED",
              "enum": [
                "LAST_MODIFIED",
                "DATE_DESC",
                "DATE_ASC",
                "SUPPLIER",
                "ID"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Large result sets are bundled in multiple pages with 50 results per page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found orders",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "deals",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/deal"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "deals",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/deal"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/sales/{view}.{type}": {
      "get": {
        "tags": [
          "businessdeals-sales",
          "businessdeals"
        ],
        "summary": "Fetch list of sales orders",
        "description": "Fetch list of sales orders",
        "operationId": "getDealList_1",
        "parameters": [
          {
            "name": "view",
            "in": "path",
            "description": "View (document)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "deal",
              "enum": [
                "deal"
              ]
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "lastUpdateDateFrom",
            "in": "query",
            "description": "The start date of last update data in the format yyyy-MM-ddThh:mm:ss. Timezone information is optional yyyy-MM-ddThh:mm:ss±hh:mm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastUpdateDateTo",
            "in": "query",
            "description": "The end date of last update data in the format yyyy-MM-ddThh:mm:ss. Default value is the actual date. Timezone information is optional yyyy-MM-ddThh:mm:ss±hh:mm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archiv",
            "in": "query",
            "description": "Filter for the archive flag: ARCHIVED: archived, NOTARCHIVED: not archived",
            "required": true,
            "schema": {
              "type": "string",
              "default": "NOTARCHIVED",
              "enum": [
                "ARCHIVED",
                "NOTARCHIVED"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the received orders",
            "schema": {
              "type": "string",
              "default": "LAST_MODIFIED",
              "enum": [
                "LAST_MODIFIED",
                "SENT_DESC",
                "SENT_ASC",
                "SUPPLIER",
                "ID"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Large result sets are bundled in multiple pages with 50 results per page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "testOrder",
            "in": "query",
            "description": "Filter for test orders: true/false",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found orders",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "deals",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/deal"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "deals",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/deal"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/sales/send": {
      "post": {
        "tags": [
          "businessdeals-sales",
          "businessdeals"
        ],
        "summary": "Place a b2b shop customer order",
        "description": "Receive a new order from a b2b shop customer in valid openTRANS 2.1 format",
        "operationId": "newDeal_1",
        "parameters": [
          {
            "name": "testOrder",
            "in": "query",
            "description": "Whether this is a test order or not",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "object"
              }
            },
            "text/xml": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/sales/search/{filter}/{view}.{type}": {
      "get": {
        "tags": [
          "businessdeals-sales",
          "businessdeals"
        ],
        "summary": "Search sales orders with filters",
        "description": "Search sales orders with filters",
        "operationId": "searchDeals",
        "parameters": [
          {
            "name": "view",
            "in": "path",
            "description": "View (document)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "deal",
              "enum": [
                "deal"
              ]
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "filter",
            "in": "path",
            "description": "Possible criteria are keywords, orderId, ownOrderId, customerOrderId, cartId e.g. orderId=11SRRK-150126-1136.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastUpdateDateFrom",
            "in": "query",
            "description": "The start date of last update data in the format yyyy-MM-ddThh:mm:ss. Timezone information is optional yyyy-MM-ddThh:mm:ss±hh:mm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastUpdateDateTo",
            "in": "query",
            "description": "The end date of last update data in the format yyyy-MM-ddThh:mm:ss. Default value is the actual date. Timezone information is optional yyyy-MM-ddThh:mm:ss±hh:mm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archiv",
            "in": "query",
            "description": "Filter for the archive flag: ARCHIVED: archived, NOTARCHIVED: not archived",
            "schema": {
              "type": "string",
              "default": "NOTARCHIVED",
              "enum": [
                "ARCHIVED",
                "NOTARCHIVED"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the received orders",
            "schema": {
              "type": "string",
              "default": "LAST_MODIFIED",
              "enum": [
                "LAST_MODIFIED",
                "DATE_DESC",
                "DATE_ASC",
                "SUPPLIER",
                "ID"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Large result sets are bundled in multiple pages with 50 results per page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "testOrder",
            "in": "query",
            "description": "Filter for test orders: true/false",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found orders",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "deals",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/deal"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "deals",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/deal"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/invoice/{dealId}": {
      "put": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Invoice specific order",
        "description": "Invoice an order by a specific order id, a valid OPENTRANS 2.1 document of type INVOICE will be created automatically",
        "operationId": "invoiceDeal",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suppressMail",
            "in": "query",
            "description": "Supress the sending of status update mails to the buyer",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found orders"
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Invoice an order with an OPENTRANS 2.1 INVOICE document",
        "description": "Send a valid OPENTRANS 2.1 document of type INVOICE to invoice or partially invoice an order by a specific order id",
        "operationId": "invoiceDealPost",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suppressMail",
            "in": "query",
            "description": "Supress the sending of status update mails to the buyer",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "string"
              }
            },
            "text/xml": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of found orders"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "404": {
            "description": "No orders found"
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/invoicexrechnung/{dealId}": {
      "post": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Invoice an order with an X INVOICE document",
        "description": "Send a valid X document of type INVOICE to invoice or partially invoice an order by a specific order id",
        "operationId": "invoiceDealPostXPdf",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suppressMail",
            "in": "query",
            "description": "Supress the sending of status update mails to the buyer",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "string"
              }
            },
            "text/xml": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of found orders"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "404": {
            "description": "No orders found"
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/invoicezugferd1/{dealId}": {
      "post": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Invoice an order with an ZUGFeRD 1.0 INVOICE document",
        "description": "Send a valid ZUGFeRD 1.0 document of type INVOICE to invoice or partially invoice an order by a specific order id",
        "operationId": "invoiceDealPostZugferd1Pdf",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suppressMail",
            "in": "query",
            "description": "Supress the sending of status update mails to the buyer",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/pdf": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of found orders"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "404": {
            "description": "No orders found"
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/invoicezugferd/{dealId}": {
      "post": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Invoice an order with an ZUGFeRD 2.0 INVOICE document",
        "description": "Send a valid ZUGFeRD 2.0 document based on the CII D22B standard of type INVOICE to invoice or partially invoice an order by a specific order id",
        "operationId": "invoiceDealPostZugferd2Pdf",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suppressMail",
            "in": "query",
            "description": "Supress the sending of status update mails to the buyer",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/pdf": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of found orders"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "404": {
            "description": "No orders found"
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/send": {
      "post": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Send a new order via ITscope",
        "description": "Send a new order in valid openTRANS 2.1 format via ITscope to a distributor",
        "operationId": "newDeal_2",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "object"
              }
            },
            "text/xml": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/send/{distributorId}": {
      "post": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Send a new order via ITscope [DEPRECATED]",
        "description": "Send a new order in valid openTRANS 2.1 format via ITscope to a distributor. Note: This method is deprecated. Use /business/deals/send instead and include the distributor ID in your openTRANS order.",
        "operationId": "newDealDeprecated",
        "parameters": [
          {
            "name": "distributorId",
            "in": "path",
            "description": "ITscope distributor ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "object"
              }
            },
            "text/xml": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "deprecated": true,
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/orderedelsewhere/{dealId}": {
      "put": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Order elsewhere specific order",
        "description": "Order elsewhere an order by a specific order id",
        "operationId": "orderedElsewhereDeal",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suppressMail",
            "in": "query",
            "description": "Supress the sending of status update mails to the buyer",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found orders"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "404": {
            "description": "No orders found"
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/partiallyadvise/{dealId}": {
      "put": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Partially advise specific order",
        "description": "Partially advise an order by a specific order id, an OPENTRANS 2.1 document of type DISPATCHNOTIFICATION will not be created automatically",
        "operationId": "partiallyadviseDeal",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suppressMail",
            "in": "query",
            "description": "Supress the sending of status update mails to the buyer",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found orders"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "404": {
            "description": "No orders found"
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/partiallyinvoice/{dealId}": {
      "put": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Partially invoice specific order",
        "description": "Partially invoice an order by a specific order id, an OPENTRANS 2.1 document of type INVOICE will not be created automatically",
        "operationId": "partiallyinvoiceDeal",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suppressMail",
            "in": "query",
            "description": "Supress the sending of status update mails to the buyer",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found orders"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "404": {
            "description": "No orders found"
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/reject/{dealId}": {
      "put": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Reject specific order",
        "description": "Reject an order by a specific order id, a valid OPENTRANS 2.1 document of type ORDERRESPONSE will be created automatically",
        "operationId": "rejectDeal",
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "ITscope order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suppressMail",
            "in": "query",
            "description": "Supress the sending of status update mails to the buyer",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found orders"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "404": {
            "description": "No orders found"
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/deals/search/{filter}/{view}.{type}": {
      "get": {
        "tags": [
          "businessdeals"
        ],
        "summary": "Search orders with filters [DEPRECATED]",
        "description": "Search orders with filters - Instead of this, please use the corresponding method for /sales or /purchase",
        "operationId": "searchDeals_1",
        "parameters": [
          {
            "name": "view",
            "in": "path",
            "description": "View (document)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "deal",
              "enum": [
                "deal"
              ]
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "filter",
            "in": "path",
            "description": "Possible criteria are keywords, orderId, ownOrderId, customerOrderId, cartId e.g. orderId=11SRRK-150126-1136.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastUpdateDateFrom",
            "in": "query",
            "description": "The start date of last update data in the format yyyy-MM-ddThh:mm:ss. Timezone information is optional yyyy-MM-ddThh:mm:ss±hh:mm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastUpdateDateTo",
            "in": "query",
            "description": "The end date of last update data in the format yyyy-MM-ddThh:mm:ss. Default value is the actual date. Timezone information is optional yyyy-MM-ddThh:mm:ss±hh:mm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archiv",
            "in": "query",
            "description": "Filter for the archive flag: ARCHIVED: archived, NOTARCHIVED: not archived",
            "schema": {
              "type": "string",
              "default": "NOTARCHIVED",
              "enum": [
                "ARCHIVED",
                "NOTARCHIVED"
              ]
            }
          },
          {
            "name": "businessType",
            "in": "query",
            "description": "Filter for the business type: PURCHASE: outgoing deals, for sellers - SALE: ingoing deals, for resellers",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PURCHASE",
              "enum": [
                "PURCHASE",
                "SALE"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the received orders",
            "schema": {
              "type": "string",
              "default": "LAST_MODIFIED",
              "enum": [
                "LAST_MODIFIED",
                "DATE_DESC",
                "DATE_ASC",
                "SUPPLIER",
                "ID"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Large result sets are bundled in multiple pages with 50 results per page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of found orders",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "deals",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/deal"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "deals",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/deal"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "deprecated": true,
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/info/apidoc/{view}": {
      "get": {
        "tags": [
          "info"
        ],
        "operationId": "apidoc",
        "parameters": [
          {
            "name": "view",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "standard"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "text/html": {},
              "application/xml": {},
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/info/quota": {
      "get": {
        "tags": [
          "info"
        ],
        "summary": "Fetch quota",
        "description": "Fetches the quota.",
        "operationId": "quota",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/xml": {}
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/info/schema/{view}.xsd": {
      "get": {
        "tags": [
          "info"
        ],
        "summary": "Fetch XML schema for different view types of the ITscope API",
        "description": "Fetches the XML schemas for different view types of the ITscope API.",
        "operationId": "schema",
        "parameters": [
          {
            "name": "view",
            "in": "path",
            "description": "View (scope of data)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "standard",
              "enum": [
                "developer",
                "developerUpdate",
                "standard",
                "standardUpdate",
                "company",
                "deal",
                "quote",
                "producttype",
                "cart",
                "cartlineitems"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/xml": {}
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/products/exports/{uuid}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Download an export",
        "description": "Download an export via ID, which was defined in ITscope.com.",
        "operationId": "export",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "ID of the export which should be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid export ID"
          },
          "404": {
            "description": "Export not found"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/products/datasheet/cnetid/{cnetid}/{view}.{type}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Fetch datasheet by 1WorldSync ID",
        "description": "Fetch product datasheet by 1WorldSync ID (for example S22650172)",
        "operationId": "queryDatasheetByCnetId",
        "parameters": [
          {
            "name": "cnetid",
            "in": "path",
            "description": "1WorldSync ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view",
            "in": "path",
            "description": "View (scope of data)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "datasheet",
              "enum": [
                "datasheet"
              ]
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "html",
              "enum": [
                "html",
                "pdf"
              ]
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Datasheet language",
            "schema": {
              "type": "string",
              "default": "",
              "enum": [
                "de",
                "en",
                "nl",
                "fr",
                "it",
                "es"
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Header parameter for the datasheet language",
            "schema": {
              "type": "string",
              "default": "de",
              "enum": [
                "de",
                "en",
                "nl",
                "fr",
                "it",
                "es"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No product found which match the given filter criteria"
          },
          "400": {
            "description": "Invalid filter criteria. A description of the problem is added to the response body."
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Please contact the ITscope support"
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/products/datasheet/id/{itscopeid}/{view}.{type}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Fetch datasheet by ID",
        "description": "Fetch product datasheet by PUID (ITscope product ID)",
        "operationId": "queryDatasheetById",
        "parameters": [
          {
            "name": "itscopeid",
            "in": "path",
            "description": "ITscope PUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view",
            "in": "path",
            "description": "View (scope of data)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "datasheet",
              "enum": [
                "datasheet"
              ]
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "html",
              "enum": [
                "html",
                "pdf"
              ]
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Datasheet language",
            "schema": {
              "type": "string",
              "default": "",
              "enum": [
                "de",
                "en",
                "nl",
                "fr",
                "it",
                "es"
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Header parameter for the datasheet language",
            "schema": {
              "type": "string",
              "default": "de",
              "enum": [
                "de",
                "en",
                "nl",
                "fr",
                "it",
                "es"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No product found which match the given filter criteria"
          },
          "400": {
            "description": "Invalid filter criteria. A description of the problem is added to the response body."
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Please contact the ITscope support"
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/products/ean/{ean}/{view}.{type}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Fetch product by EAN",
        "description": "Fetch a single product by EAN or UPC. As our catalogue can have multiple products with the same EAN, only the most relevant is returned. To fetch all products, use /products/search.",
        "operationId": "queryProductByEan",
        "parameters": [
          {
            "name": "ean",
            "in": "path",
            "description": "EAN or UPC, example: 0885909565573",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json",
                "csv"
              ]
            }
          },
          {
            "name": "view",
            "in": "path",
            "description": "View (scope of data)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "standard",
              "enum": [
                "developer",
                "developerUpdate",
                "standard",
                "standardUpdate"
              ]
            }
          },
          {
            "name": "realtime",
            "in": "query",
            "description": "Realtime request for all prices",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "historyFrom",
            "in": "query",
            "description": "The start date of historic product data in the format yyyy-MM-dd. Only if this parameter is set and with the appropriate contract, historic data if available will be added to the product.<br> More at the <a href=\"https://guide.itscope.com/kb/historische-daten/\">Online Help</a>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "historyTo",
            "in": "query",
            "description": "The end date of historic product data in the format yyyy-MM-dd. Default value is the actual date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "historyAggregation",
            "in": "query",
            "description": "The weekly or monthly granularity of historic product data",
            "schema": {
              "type": "string",
              "default": "monthly",
              "enum": [
                "weekly",
                "monthly"
              ]
            }
          },
          {
            "name": "plzproducts",
            "in": "query",
            "description": "Items ending with -999, products without ITscope catalogue ID",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Languages of the product content, comma separated (de,en,fr,nl,it,es)",
            "schema": {
              "type": "string",
              "default": "de"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Valid list od product objects",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/productResponse"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/productResponse"
                }
              }
            }
          },
          "204": {
            "description": "No product found which match the given filter criteria"
          },
          "400": {
            "description": "Invalid filter criteria. A description of the problem is added to the response body."
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Please contact the ITscope support"
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/products/id/{itscopeid}/{view}.{type}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Fetch product by ID",
        "description": "Fetch a single product by PUID (ITscope product ID)",
        "operationId": "queryProductById",
        "parameters": [
          {
            "name": "itscopeid",
            "in": "path",
            "description": "ITscope PUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json",
                "csv"
              ]
            }
          },
          {
            "name": "view",
            "in": "path",
            "description": "View (scope of data)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "standard",
              "enum": [
                "developer",
                "developerUpdate",
                "standard",
                "standardUpdate"
              ]
            }
          },
          {
            "name": "realtime",
            "in": "query",
            "description": "Realtime request for all prices",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "historyFrom",
            "in": "query",
            "description": "The start date of historic product data in the format yyyy-MM-dd. Only if this parameter is set and with the appropriate contract, historic data if available will be added to the product.<br> More at the <a href=\"https://guide.itscope.com/kb/historische-daten/\">Online Help</a>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "historyTo",
            "in": "query",
            "description": "The end date of historic product data in the format yyyy-MM-dd. Default value is the actual date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "historyAggregation",
            "in": "query",
            "description": "The weekly or monthly granularity of historic product data",
            "schema": {
              "type": "string",
              "default": "monthly",
              "enum": [
                "weekly",
                "monthly"
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Languages of the product content, comma separated (de,en,fr,nl,it,es)",
            "schema": {
              "type": "string",
              "default": "de"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Valid list od product objects",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/productResponse"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/productResponse"
                }
              }
            }
          },
          "204": {
            "description": "No product found which match the given filter criteria"
          },
          "400": {
            "description": "Invalid filter criteria. A description of the problem is added to the response body."
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Please contact the ITscope support"
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/products/producttypes/{view}.{type}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "List of all product types",
        "description": "A list of all product types for master data mappings.",
        "operationId": "queryProductTypes",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "view",
            "in": "path",
            "description": "View (scope of data)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "producttype",
              "enum": [
                "producttype"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All product types",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "productTypes",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/productType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "productTypes",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/productType"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No product types found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Please contact the ITscope support"
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/products/search/{filter}/{view}.{type}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Search products by filter",
        "description": "Fetch single or multiple products, filter and sort them. One or more languages for product content can be specified.",
        "operationId": "queryProducts",
        "parameters": [
          {
            "name": "filter",
            "in": "path",
            "description": "One or more filter criteria separated by semicolon (AND-search). Within a criteria values can be separated by comma (OR). Possible criteria are ean=0885909565573, distpid=C194570, keywords=Apple%20Ipad, producttype etc <br> More at the <a href=\"https://guide.itscope.com/kb/products-search-methode/\">Online Help</a>",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json",
                "csv"
              ]
            }
          },
          {
            "name": "view",
            "in": "path",
            "description": "View (scope of data)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "standard",
              "enum": [
                "developer",
                "developerUpdate",
                "standard",
                "standardUpdate"
              ]
            }
          },
          {
            "name": "realtime",
            "in": "query",
            "description": "Realtime request for all prices",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "historyFrom",
            "in": "query",
            "description": "The start date of historic product data in the format yyyy-MM-dd. Only if this parameter is set and with the appropriate contract, historic data if available will be added to the product.<br> More at the <a href=\"https://guide.itscope.com/kb/historische-daten/\">Online Help</a>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "historyTo",
            "in": "query",
            "description": "The end date of historic product data in the format yyyy-MM-dd. Default value is the actual date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "historyAggregation",
            "in": "query",
            "description": "The weekly or monthly granularity of historic product data",
            "schema": {
              "type": "string",
              "default": "",
              "enum": [
                "weekly",
                "monthly"
              ]
            }
          },
          {
            "name": "productEntryFrom",
            "in": "query",
            "description": "The start date of productentry date in the format yyyy-MM-dd",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productEntryTo",
            "in": "query",
            "description": "The end date of productentry date in the format yyyy-MM-dd. Default value is the actual date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plzproducts",
            "in": "query",
            "description": "Items ending with -999, products without ITscope catalogue ID",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Large result sets are bundled in multiple pages with 50 results per page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "item",
            "in": "query",
            "description": "(Not yet implemented) Chooses a single product from the result set and returns only that.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results",
            "schema": {
              "type": "string",
              "default": "DEFAULT",
              "enum": [
                "DEFAULT",
                "PRICE_ASC",
                "PRICE_DESC",
                "SOURCES_COUNT",
                "STOCK",
                "MANUFACTURER_SKU",
                "NAME_ASC",
                "NAME_DESC",
                "QUAL",
                "TOPSELLER",
                "EXACT",
                "IRANK"
              ]
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Languages of the product content, comma separated (de,en,fr,nl,it,es)",
            "schema": {
              "type": "string",
              "default": "de"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Valid list od product objects",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/productResponse"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/productResponse"
                }
              }
            }
          },
          "204": {
            "description": "No products found which match the given filter criteria"
          },
          "400": {
            "description": "Invalid filter criteria. A description of the problem is added to the response body."
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Please contact the ITscope support"
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/products/ids/{itscopeids}/{view}.{type}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Fetch products by ID",
        "description": "Fetch multiple products by PUID (ITscope product ID)",
        "operationId": "queryProductsByIds",
        "parameters": [
          {
            "name": "itscopeids",
            "in": "path",
            "description": "ITscope PUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json",
                "csv"
              ]
            }
          },
          {
            "name": "view",
            "in": "path",
            "description": "View (scope of data)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "standard",
              "enum": [
                "developer",
                "developerUpdate",
                "standard",
                "standardUpdate"
              ]
            }
          },
          {
            "name": "realtime",
            "in": "query",
            "description": "Realtime request for all prices",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "historyFrom",
            "in": "query",
            "description": "The start date of historic product data in the format yyyy-MM-dd. Only if this parameter is set and with the appropriate contract, historic data if available will be added to the product.<br> More at the <a href=\"https://guide.itscope.com/kb/historische-daten/\">Online Help</a>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "historyTo",
            "in": "query",
            "description": "The end date of historic product data in the format yyyy-MM-dd. Default value is the actual date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "historyAggregation",
            "in": "query",
            "description": "The weekly or monthly granularity of historic product data",
            "schema": {
              "type": "string",
              "default": "monthly",
              "enum": [
                "weekly",
                "monthly"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Valid list od product objects",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/productResponse"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/productResponse"
                }
              }
            }
          },
          "204": {
            "description": "No product found which match the given filter criteria"
          },
          "400": {
            "description": "Invalid filter criteria. A description of the problem is added to the response body."
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Please contact the ITscope support"
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/quotes/{quoteId}/{view}.{type}": {
      "get": {
        "tags": [
          "businessquotes"
        ],
        "summary": "Fetch a quote by the Tscope quote ID",
        "description": "Fetch a single quote by the ITscope quote ID",
        "operationId": "getQuoteByQuoteId",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ITscope quote ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view",
            "in": "path",
            "description": "View (document)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "quote",
              "enum": [
                "quote"
              ]
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json",
                "pdf"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Quote",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "quotes",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/quote"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "quotes",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/quote"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No quotes found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/quotes/{view}.{type}": {
      "get": {
        "tags": [
          "businessquotes"
        ],
        "summary": "Fetch a list of quotes",
        "description": "Fetch a list of quotes and their statuses",
        "operationId": "getQuoteList",
        "parameters": [
          {
            "name": "view",
            "in": "path",
            "description": "View (document)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "quote",
              "enum": [
                "quote"
              ]
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "archiv",
            "in": "query",
            "description": "Filter for the archive flag: ARCHIVED: archived, NOTARCHIVED: not archived",
            "schema": {
              "type": "string",
              "default": "NOTARCHIVED",
              "enum": [
                "ARCHIVED",
                "NOTARCHIVED"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results",
            "schema": {
              "type": "string",
              "default": "LAST_MODIFIED",
              "enum": [
                "LAST_MODIFIED",
                "VALID_DESC",
                "VALID_ASC",
                "TITLE_DESC",
                "TITLE_ASC",
                "ORGANISATION_DESC",
                "ORGANISATION_ASC",
                "DATE_DESC",
                "DATE_ASC"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Large result sets are bundled in multiple pages with 50 results per page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of quotes",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "quotes",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/quote"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "quotes",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/quote"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No quotes found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/business/quotes/search/{filter}/{view}.{type}": {
      "get": {
        "tags": [
          "businessquotes"
        ],
        "summary": "Fetch quotes by filters",
        "description": "Search for quotes by using filters",
        "operationId": "searchQuotes",
        "parameters": [
          {
            "name": "view",
            "in": "path",
            "description": "View (document)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "quote",
              "enum": [
                "quote"
              ]
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Output data format",
            "required": true,
            "schema": {
              "type": "string",
              "default": "xml",
              "enum": [
                "xml",
                "json"
              ]
            }
          },
          {
            "name": "filter",
            "in": "path",
            "description": "Possible criteria are keywords, quoteno, status[DRAFT, PROGRESS, WON, LOST] e.g. quoteno=MAN-20150126-10147 oder status=WON.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archiv",
            "in": "query",
            "description": "Filter for the archive flag: ARCHIVED: archived, NOTARCHIVED: not archived",
            "schema": {
              "type": "string",
              "default": "NOTARCHIVED",
              "enum": [
                "ARCHIVED",
                "NOTARCHIVED"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results",
            "schema": {
              "type": "string",
              "default": "LAST_MODIFIED",
              "enum": [
                "LAST_MODIFIED",
                "VALID_DESC",
                "VALID_ASC",
                "TITLE_DESC",
                "TITLE_ASC",
                "ORGANISATION_DESC",
                "ORGANISATION_ASC",
                "DATE_DESC",
                "DATE_ASC"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Large result sets are bundled in multiple pages with 50 results per page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of quotes",
            "headers": {},
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "quotes",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/quote"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "name": "quotes",
                    "wrapped": true
                  },
                  "items": {
                    "$ref": "#/components/schemas/quote"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No quotes found"
          },
          "401": {
            "description": "Not authorized: Login and API key of the user required as basic authentication"
          },
          "403": {
            "description": "Customer quota exceeded: Free API requests expired. Please buy an API/Export plan."
          },
          "500": {
            "description": "An exception occurred while processing the request."
          },
          "503": {
            "description": "Number of valid requests per minute exceeded"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "productResponse": {
        "type": "object",
        "properties": {
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/product"
            }
          },
          "log": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/productLogEntry"
            }
          }
        },
        "xml": {
          "name": "productResponse"
        }
      },
      "productLogEntry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "cause": {
            "type": "string"
          }
        },
        "xml": {
          "name": "productLogEntry"
        }
      },
      "CartLineItemOrder": {
        "type": "object",
        "properties": {
          "puid": {
            "type": "integer",
            "format": "int64"
          },
          "supplierId": {
            "type": "integer",
            "format": "int64"
          },
          "supplierItemId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string"
          },
          "customerOrderReference": {
            "type": "string"
          },
          "referencedAddresses": {
            "$ref": "#/components/schemas/ReferencedAddresses"
          }
        },
        "xml": {
          "name": "cartLineItem"
        }
      },
      "CartLineItemOrderContainer": {
        "required": [
          "cartLineItem"
        ],
        "type": "object",
        "properties": {
          "cartLineItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartLineItemOrder"
            }
          }
        },
        "xml": {
          "name": "cartLineItems"
        }
      },
      "LineItemAddress": {
        "required": [
          "addressType"
        ],
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string",
            "enum": [
              "invoice_recipient",
              "delivery",
              "customer"
            ]
          },
          "name": {
            "type": "string"
          },
          "name2": {
            "type": "string"
          },
          "name3": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "postOfficeBox": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "countryCoded": {
            "type": "string"
          },
          "clientNumber": {
            "type": "string"
          },
          "contactFirstName": {
            "type": "string"
          },
          "contactLastName": {
            "type": "string"
          },
          "contactEmail": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "xml": {
          "name": "referencedAddress"
        }
      },
      "ReferencedAddresses": {
        "type": "object",
        "properties": {
          "referencedAddress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemAddress"
            }
          }
        },
        "xml": {
          "name": "referencedAddresses"
        }
      },
      "CartOrder": {
        "type": "object",
        "properties": {
          "cartName": {
            "type": "string"
          }
        },
        "xml": {
          "name": "cart"
        }
      },
      "ApiViewType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "logClick": {
            "type": "boolean"
          },
          "apiVersion": {
            "type": "string",
            "enum": [
              "V10",
              "V20",
              "V21"
            ]
          },
          "reportType": {
            "type": "boolean"
          },
          "formatTemplate": {
            "type": "string"
          },
          "qualifiedId": {
            "type": "string"
          },
          "openTransType": {
            "type": "boolean"
          }
        }
      },
      "CompanyExportProfile": {
        "type": "object",
        "properties": {
          "apiViewType": {
            "$ref": "#/components/schemas/ApiViewType"
          },
          "settings": {
            "$ref": "#/components/schemas/TableProviderSettings"
          },
          "tableProvider": {
            "$ref": "#/components/schemas/ExportTableProvider"
          }
        }
      },
      "ExportProfile": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/TableProviderSettings"
          },
          "tableProvider": {
            "$ref": "#/components/schemas/ExportTableProvider"
          },
          "apiViewType": {
            "$ref": "#/components/schemas/ApiViewType"
          }
        }
      },
      "ExportTableObject": {
        "type": "object",
        "properties": {
          "tableIdAsString": {
            "type": "string"
          },
          "rowDefinition": {
            "$ref": "#/components/schemas/RowDefinitionObject"
          },
          "rowTransformer": {
            "$ref": "#/components/schemas/RowTransformerObject"
          },
          "tableIdFromClass": {
            "$ref": "#/components/schemas/TableID"
          },
          "tableId": {
            "$ref": "#/components/schemas/TableID"
          }
        }
      },
      "ExportTableProvider": {
        "type": "object",
        "properties": {
          "exportProfile": {
            "$ref": "#/components/schemas/ExportProfile"
          },
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InMemoryTableObjectObject"
            }
          },
          "tableDefinitions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ExportTableObject"
            }
          }
        }
      },
      "IExportFieldObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "mandatory": {
            "type": "boolean"
          },
          "reference": {
            "type": "boolean"
          },
          "exportModelClass": {
            "type": "string"
          },
          "targetExportField": {
            "$ref": "#/components/schemas/IExportFieldObject"
          },
          "targetGenericType": {
            "type": "string"
          }
        }
      },
      "InMemoryTableObjectObject": {
        "type": "object",
        "properties": {
          "tableDefinition": {
            "type": "object"
          },
          "tableStreamWriter": {
            "type": "object"
          }
        }
      },
      "RowDefinitionObject": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IExportFieldObject"
            }
          },
          "fieldIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fieldHeaders": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RowTransformerObject": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IExportFieldObject"
            }
          }
        }
      },
      "TableID": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "TableProviderSettings": {
        "type": "object",
        "properties": {
          "excludeWeeNumbers": {
            "type": "boolean"
          },
          "projectBundleInformationVisible": {
            "type": "boolean"
          }
        }
      },
      "DealExportProfile21": {
        "type": "object",
        "properties": {
          "apiViewType": {
            "$ref": "#/components/schemas/ApiViewType"
          },
          "settings": {
            "$ref": "#/components/schemas/TableProviderSettings"
          },
          "tableProvider": {
            "$ref": "#/components/schemas/ExportTableProvider"
          }
        }
      },
      "CompactExportProfile21": {
        "type": "object",
        "properties": {
          "apiViewType": {
            "$ref": "#/components/schemas/ApiViewType"
          },
          "settings": {
            "$ref": "#/components/schemas/TableProviderSettings"
          },
          "tableProvider": {
            "$ref": "#/components/schemas/ExportTableProvider"
          },
          "csvStreamingTable": {
            "$ref": "#/components/schemas/ExportTableObject"
          }
        }
      },
      "SetExportProfile": {
        "type": "object",
        "properties": {
          "apiViewType": {
            "$ref": "#/components/schemas/ApiViewType"
          },
          "settings": {
            "$ref": "#/components/schemas/TableProviderSettings"
          },
          "tableProvider": {
            "$ref": "#/components/schemas/ExportTableProvider"
          }
        }
      },
      "QuoteExportProfile21": {
        "type": "object",
        "properties": {
          "apiViewType": {
            "$ref": "#/components/schemas/ApiViewType"
          },
          "settings": {
            "$ref": "#/components/schemas/TableProviderSettings"
          },
          "tableProvider": {
            "$ref": "#/components/schemas/ExportTableProvider"
          }
        }
      },
      "company": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name der Firma"
          },
          "street": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Straßenname der Hauptadresse der Firma"
          },
          "zip": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Postleitzahl der Hauptadresse der Firma"
          },
          "city": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Stadtname der Hauptadresse der Firma"
          },
          "country": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Land der Hauptadresse der Firma"
          },
          "manufacturer": {
            "$ref": "#/components/schemas/manufacturer"
          },
          "supplier": {
            "$ref": "#/components/schemas/supplier"
          }
        },
        "description": "Jeder Hersteller oder Lieferant ist einer Firma zugeordnet",
        "xml": {
          "name": "company"
        }
      },
      "manufacturer": {
        "required": [
          "deeplink",
          "id",
          "name",
          "shortName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Eindeutiger Key",
            "format": "int64"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Bezeichner des Herstellers"
          },
          "shortName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Kurzname des Herstellers"
          },
          "deeplink": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "URL, Link auf den Hersteller innerhalb der ITscope Plattform"
          }
        },
        "description": "Hersteller eines Produkts."
      },
      "supplier": {
        "required": [
          "deeplink",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Eindeutiger Key",
            "format": "int64"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Bezeichner des Lieferanten"
          },
          "deeplink": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "URL, Link auf den Lieferanten innerhalb der ITscope Plattform"
          },
          "customerAccountNumber": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Kundennummer im Falle einer Partnerschaft. Kann als Filter verwendet werden, um zu ermitteln ob zu diesem Lieferanten eine Partnerschaft existiert"
          },
          "orderAccountNumber": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Bestellkundennummer für die API, falls nicht vorhanden wird die Kundennummer zurückgegeben."
          },
          "weeeRegNo": {
            "type": "string",
            "description": "Die WEEE-Reg.-Nr. des Lieferanten (nach §6 ElektroG)"
          }
        },
        "description": "Lieferant einer Bezugsquelle."
      },
      "buyer": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name der Firma"
          },
          "customer": {
            "$ref": "#/components/schemas/customer"
          }
        },
        "description": "Käuferdaten zu einem Auftrag, Bestellung"
      },
      "customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Eindeutiger Key",
            "format": "int64"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Bezeichner des Kunden"
          },
          "deeplink": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "URL, Link auf den Kunden innerhalb der ITscope Plattform"
          }
        },
        "description": "Information zu einem Kunden/zu einer Firma"
      },
      "deal": {
        "required": [
          "vendor"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "Eindeutiger Key der Bestellung (intern)"
          },
          "ownOrderId": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "Individuelle Bestellnummer des Bestellers"
          },
          "customerOrderId": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "Individuelle Bestellnummer des Endkunden"
          },
          "cartId": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "Warenkorb-ID des Deals, in dem sich die Bestellung befindet"
          },
          "status": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Kennung des Zustandes, in dem sich die Bestellung befindet, z.B. SENT"
          },
          "statusMessage": {
            "maxLength": 8192,
            "minLength": 0,
            "type": "string",
            "description": "Textuelle Zustandsbeschreibung"
          },
          "statusDate": {
            "type": "string",
            "description": "Letztes Änderungsdatum der Bestellung",
            "format": "date-time"
          },
          "archived": {
            "type": "boolean",
            "description": "Archivflag der Bestellung"
          },
          "deeplink": {
            "type": "string",
            "description": "Deeplink zur Bestellung"
          },
          "imported": {
            "type": "boolean",
            "description": "per API importiert"
          },
          "automated": {
            "type": "boolean",
            "description": "per Automation erstellt"
          },
          "businessType": {
            "type": "string",
            "description": "PURCHASE bei ausgehender Bestellung, SALE bei eingehendem Auftrag"
          },
          "b2bOrder": {
            "type": "boolean",
            "description": "per B2B-Suite erstellt"
          },
          "testOrder": {
            "type": "boolean",
            "description": "Test-Flag der Bestellung"
          },
          "vendor": {
            "$ref": "#/components/schemas/vendor"
          },
          "buyer": {
            "$ref": "#/components/schemas/buyer"
          },
          "order": {
            "type": "array",
            "xml": {
              "name": "orders",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/order"
            }
          },
          "orderresponse": {
            "type": "array",
            "xml": {
              "name": "orderresponses",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/orderresponse"
            }
          },
          "dispatchnotification": {
            "type": "array",
            "xml": {
              "name": "dispatchnotifications",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/dispatchnotification"
            }
          },
          "invoice": {
            "type": "array",
            "xml": {
              "name": "invoices",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/invoice"
            }
          },
          "payment": {
            "$ref": "#/components/schemas/payment"
          }
        },
        "description": "Detailinformationen zu einem Auftrag, Bestellung",
        "xml": {
          "name": "deal"
        }
      },
      "dispatchnotification": {
        "type": "object",
        "properties": {
          "transactionId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "ITscope TransaktionsId"
          },
          "lastUpdate": {
            "type": "string",
            "description": "Datum des letzten Updates des Dokuments",
            "format": "date-time"
          },
          "documentUrl": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "<a href=\"https://guide.itscope.com/kb/business-documents-methode/\">API Business Dokumente Url</a> für den Download des Dokuments. Ist keine Url vorhanden hat diese Transaktion kein DISPATCHNOTIFICATION Dokument, z.B. weil die Transaktion von Hand über das <a href=\"https://guide.itscope.com/kbtopic/verkaufsboard/\">Verkaufsboard</a> betätigt wurde."
          }
        },
        "description": "Details zur Liste der <a href=\"https://guide.itscope.com/kb/bestell-und-angebotsdaten-im-opentrans-2-1-format/\">OpenTrans 2.1 DISPATCHNOTIFICATION</a> Dokumente"
      },
      "invoice": {
        "type": "object",
        "properties": {
          "transactionId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "ITscope TransaktionsId"
          },
          "lastUpdate": {
            "type": "string",
            "description": "Datum des letzten Updates des Dokuments",
            "format": "date-time"
          },
          "documentUrl": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "<a href=\"https://guide.itscope.com/kb/business-documents-methode/\">API Business Dokumente Url</a> für den Download des Dokuments. Ist keine Url vorhanden hat diese Transaktion kein INVOICE Dokument, z.B. weil die Transaktion von Hand über das <a href=\"https://guide.itscope.com/kbtopic/verkaufsboard/\">Verkaufsboard</a> betätigt wurde."
          }
        },
        "description": "Details zur Liste der <a href=\"https://guide.itscope.com/kb/bestell-und-angebotsdaten-im-opentrans-2-1-format/\">OpenTrans 2.1 INVOICE</a> Dokumente"
      },
      "order": {
        "type": "object",
        "properties": {
          "transactionId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "ITscope TransaktionsId"
          },
          "lastUpdate": {
            "type": "string",
            "description": "Datum des letzten Updates des Dokuments",
            "format": "date-time"
          },
          "documentUrl": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "<a href=\"https://guide.itscope.com/kb/business-documents-methode/\">API Business Dokumente Url</a> für den Download des Dokuments. Ist keine Url vorhanden hat diese Transaktion kein ORDER Dokument, z.B. weil die Transaktion von Hand über das <a href=\"https://guide.itscope.com/kbtopic/verkaufsboard/\">Verkaufsboard</a> betätigt wurde."
          }
        },
        "description": "Details zur Liste der <a href=\"https://guide.itscope.com/kb/bestell-und-angebotsdaten-im-opentrans-2-1-format/\">OpenTrans 2.1 ORDER</a> Dokumente"
      },
      "orderresponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "ITscope TransaktionsId"
          },
          "lastUpdate": {
            "type": "string",
            "description": "Datum des letzten Updates des Dokuments",
            "format": "date-time"
          },
          "documentUrl": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "<a href=\"https://guide.itscope.com/kb/business-documents-methode/\">API Business Dokumente Url</a> für den Download des Dokuments. Ist keine Url vorhanden hat diese Transaktion kein ORDERRESPONSE Dokument, z.B. weil die Transaktion von Hand über das <a href=\"https://guide.itscope.com/kbtopic/verkaufsboard/\">Verkaufsboard</a> betätigt wurde."
          }
        },
        "description": "Details zur Liste der <a href=\"https://guide.itscope.com/kb/bestell-und-angebotsdaten-im-opentrans-2-1-format/\">OpenTrans 2.1 ORDERRESPONSE</a> Dokumente"
      },
      "payment": {
        "type": "object",
        "properties": {
          "transactionId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "TransaktionsId des Zahlungsdienstleisters"
          },
          "lastUpdate": {
            "type": "string",
            "description": "Letztes Update",
            "format": "date-time"
          }
        },
        "description": "Details zu Bezahlinformationen"
      },
      "vendor": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name der Firma"
          },
          "supplier": {
            "$ref": "#/components/schemas/supplier"
          }
        },
        "description": "Verkäuferdaten zu einem Auftrag, Bestellung"
      },
      "accessory": {
        "type": "object",
        "properties": {
          "referencedProductId": {
            "type": "integer",
            "description": "Referenz auf ein Bezugsprodukt, z.B. ein Produkt das als Originalzubehör geführt wird",
            "format": "int64"
          },
          "typeId": {
            "type": "integer",
            "description": "Interne Kennung für die <a href=\"https://guide.itscope.com/kb/zubehoer-typen/\">Art des Bezugsproduktes</a>",
            "format": "int32"
          },
          "type": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Bezeichner für die <a href=\"https://guide.itscope.com/kb/zubehoer-typen/\">Art des Bezugsproduktes</a>, z.B. Original-Zubehör, Kompatibles Zubehör, usw."
          }
        },
        "description": "<a href=\"https://guide.itscope.com/kb/zubehoer-typen/\">Originalzubehör und kompatibles Zubehör</a> zu einem Produkt"
      },
      "attribute": {
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 10000,
            "minLength": 0,
            "type": "string",
            "description": "Der Basiswert (siehe auch <a href=\"'https://guide.itscope.com/kb/einheiten-fuer-produkteigenschaften-vom-typ-zahl/\">Basiseinheit</a>) der Eigenschaft, bei Text als Textbaustein, bei Zahlen als kleinste Angabe"
          },
          "displayValue": {
            "maxLength": 10000,
            "minLength": 0,
            "type": "string",
            "description": "Der lesbare Wert der Eigenschaft, inklusive Einheit"
          },
          "attributeTypeId": {
            "type": "integer",
            "description": "Eindeutige Kennung eines konkreten Eigenschafttyps",
            "format": "int64"
          },
          "attributeTypeName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name des konkreten Eigenschafttyps"
          },
          "attributeTypeRank": {
            "type": "integer",
            "description": "Ranking des Eigenschafttyps, kann z.B. zur Sortierung verwendet werden",
            "format": "int64"
          },
          "attributeTypeGroupId": {
            "type": "integer",
            "description": "Kennung einer Eigenschaftsgruppe, kein Tabellenverweis, sondern identifiziert attributeTypeGroupName eindeutig",
            "format": "int64"
          },
          "attributeTypeGroupName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name der Eigenschaftsgruppe"
          }
        },
        "description": "Eigenschaften zu einem Produkt."
      },
      "attributeCluster": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Eindeutiger ITscope Key",
            "format": "int64"
          },
          "productTypeId": {
            "type": "integer",
            "description": "Referenz auf den Produkttyp, optional",
            "format": "int64"
          },
          "productTypeName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name des Produkttyps, zu dem diese Eigenschaftsausprägung gehört, optional"
          },
          "attributeTypeName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name einer Eigenschaft. Kann analog dem Namen aus ProductType.attributeTypeName(1..5) sein"
          },
          "attributeTypeGroupName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name einer Eigenschaftsgruppe"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Bezeichner der Ausprägung (z.B. 2 GB, 15\", 80 W - 120 W)"
          },
          "rank": {
            "type": "integer",
            "description": "Rang der Eigenschaft",
            "format": "int64"
          }
        },
        "description": "Eigenschaftscluster, in denen das Produkt für Merkmalssuchen gefunden werden kann. Kann je nach Menge mehrere Eigenschaftsausprägungen in Intervallen zusammenfassen, z.B. 64-128MB RAM"
      },
      "contentCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Eindeutiger Key",
            "format": "int64"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Bezeichner der Kategorie"
          }
        },
        "description": "<a href=\"https://guide.itscope.com/kb/kategorien-fuer-content/\">ITscope-Kategorisierung</a> für Content (z.B. Strukturierte Merkmalstexte, Produktfoto,usw.)."
      },
      "contentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Eindeutiger Key",
            "format": "int64"
          },
          "name": {
            "maxLength": 1023,
            "minLength": 0,
            "type": "string",
            "description": "Anzeigename des Contents (z.B. Icecat Standardbild groß, 1WorldSync Produkt-ID)"
          }
        },
        "description": "<a href=\"https://guide.itscope.com/kb/modell-fuer-content/\">Einteilung der Contents in unterschiedliche Typen durch den Contentanbieter.</a>,"
      },
      "contentProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Eindeutiger Key",
            "format": "int64"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Klartextname des Contentlieferanten (z.B. Icecat, DCI)"
          },
          "rank": {
            "type": "integer",
            "description": "Priorisierung, zur Sortierung, gleiche Werte mehrfach möglich",
            "format": "int32"
          }
        },
        "description": "<a href=\"https://guide.itscope.com/kb/provider-fur-content/\">Herkunft des Content</a> z.B. 1WorldSync, Icecat, Hersteller, Distributor"
      },
      "contractParameter": {
        "type": "object",
        "properties": {
          "displayName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Beschreibung des Vertragsparameters"
          },
          "orderParameterName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Die Id des Vertragsparameters"
          },
          "mandatory": {
            "type": "boolean",
            "description": "Der Vertragsparameter ist bei der Bestellung ein Pflichtfeld"
          },
          "example": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Beispiel für den entsprechenden Vertragsparameter"
          }
        },
        "description": "Vertragsparameter fürs Bestellen"
      },
      "historicalDataItem": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Startdatum der Woche oder Monat abhängig von der gewünschten Aggregation"
          },
          "priceMin": {
            "type": "number",
            "description": "Preis Minimum innerhalb eines entsprechenden Zeitraums"
          },
          "priceMax": {
            "type": "number",
            "description": "Preis Maximum innerhalb eines entsprechenden Zeitraums"
          },
          "priceMedian": {
            "type": "number",
            "description": "Preis Median innerhalb eines entsprechenden Zeitraums"
          },
          "priceMedianInStock": {
            "type": "number",
            "description": "Preis Median für lagernde Artikel innerhalb eines entsprechenden Zeitraums"
          },
          "priceAvg": {
            "type": "number",
            "description": "Preis Durchschnitt innerhalb eines entsprechenden Zeitraums"
          },
          "priceAvgInStock": {
            "type": "number",
            "description": "Preis Durchschnitt für lagernde Artikel innerhalb eines entsprechenden Zeitraums"
          },
          "supplierCount": {
            "type": "integer",
            "description": "Anzahl der Lieferanten innerhalb eines entsprechenden Zeitraums",
            "format": "int32"
          },
          "supplierCountInStock": {
            "type": "integer",
            "description": "Anzahl der Lieferanten mit Lagerbestand innerhalb eines entsprechenden Zeitraums",
            "format": "int32"
          },
          "stockSum": {
            "type": "integer",
            "description": "Summe der Lagerartikel innerhalb eines entsprechenden Zeitraums",
            "format": "int32"
          },
          "salesTrend": {
            "type": "integer",
            "description": "Verkaufstendenz innerhalb eines entsprechenden Zeitraums",
            "format": "int32"
          }
        },
        "description": "Wöchentlich oder monatlich aggregierte historische Daten, abhängig vom gewünschten Zeitraum und Aggregation"
      },
      "keyContent": {
        "type": "object",
        "properties": {
          "key": {
            "type": "integer",
            "description": "Key des Datensatzes, nicht eindeutig",
            "format": "int64"
          },
          "langId": {
            "type": "integer",
            "description": "Interne <a href=\"https://guide.itscope.com/kb/sprach-ids-fuer-content/\">Kennung der Sprache</a>, in der dieser Content vorliegt",
            "format": "int64"
          },
          "contentModel": {
            "$ref": "#/components/schemas/contentModel"
          },
          "contentProvider": {
            "$ref": "#/components/schemas/contentProvider"
          },
          "contentCategory": {
            "$ref": "#/components/schemas/contentCategory"
          },
          "value": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Inhalt des Content (Wert des Keys)"
          },
          "lang": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Sprachcode in ISO639, in der dieser Content vorliegt"
          }
        },
        "description": "Contentdaten zu einem Produkt, die in Form von Schlüsseln vorliegen (z.B. Kategorie-IDs, Zolltarifnummern)"
      },
      "product": {
        "required": [
          "aggregatedStatus",
          "aggregatedStatusText",
          "aggregatedStock",
          "aggregatedSupplierItems",
          "deeplink",
          "entryDate",
          "manufacturerId",
          "productName",
          "productTypeGroupId",
          "productTypeGroupName",
          "productTypeId",
          "productTypeName",
          "puid",
          "standardHtmlDatasheet",
          "supplierItem"
        ],
        "type": "object",
        "properties": {
          "puid": {
            "type": "integer",
            "description": "Eindeutiger Key",
            "format": "int64"
          },
          "ean": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string",
            "description": "EAN"
          },
          "manufacturerSKU": {
            "maxLength": 150,
            "minLength": 0,
            "type": "string",
            "description": "Herstellerartikelnummer"
          },
          "icecatId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "IceCat ID"
          },
          "cnetId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "1WorldSync ID"
          },
          "bechlemId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Bechlem ID"
          },
          "eClass": {
            "maxLength": 11,
            "minLength": 0,
            "type": "string",
            "description": "eClass ID"
          },
          "eClassV7": {
            "maxLength": 11,
            "minLength": 0,
            "type": "string",
            "description": "eClass Version 7"
          },
          "customsTariffNumber": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Zolltarifnummer"
          },
          "UNSPSC": {
            "maxLength": 14,
            "minLength": 0,
            "type": "string",
            "description": "UNSPSC Classification Code"
          },
          "manufacturerId": {
            "type": "integer",
            "description": "Referenz auf den Hersteller dieses Produktes (n:1 auf Manufacturer.id)",
            "format": "int64"
          },
          "manufacturerName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name des Herstellers"
          },
          "productName": {
            "type": "string",
            "description": "Konfigurierbarer Produktbezeichner"
          },
          "shortDescription": {
            "type": "string",
            "description": "Konfigurierbare Kurzbezeichnung"
          },
          "longDescription": {
            "type": "string",
            "description": "<a href=\"https://guide.itscope.com/kb/produktbezeichner-und-produkttexte/\">Langtext</a> des Produktes"
          },
          "productTypeId": {
            "type": "integer",
            "description": "Referenz auf den Produkttyp dieses Produktes",
            "format": "int64"
          },
          "productTypeGroupId": {
            "type": "string",
            "description": "Referenz auf Produkttyp-Gruppe (ProductTypeGroup.id, n:1)"
          },
          "productTypeGroupName": {
            "type": "string",
            "description": "Name der Gruppe von Produkttypen, z.B. Netzwerktechnik. Kann als 1. <a href=\"https://guide.itscope.com/kb/produktkategorien/\">Kategorieebene</a> verwendet werden."
          },
          "productTypeName": {
            "type": "string",
            "description": "Bezeichner des Produkttyps. Kann als 2. <a href=\"https://guide.itscope.com/kb/produktkategorien/\">Kategorieebene</a> verwendet werden."
          },
          "attributeTypeId1": {
            "type": "integer",
            "description": "Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId",
            "format": "int64"
          },
          "attributeTypeName1": {
            "type": "string",
            "description": "Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen"
          },
          "attributeTypeId2": {
            "type": "integer",
            "description": "Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId",
            "format": "int64"
          },
          "attributeTypeName2": {
            "type": "string",
            "description": "Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen"
          },
          "attributeTypeId3": {
            "type": "integer",
            "description": "Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId",
            "format": "int64"
          },
          "attributeTypeName3": {
            "type": "string",
            "description": "Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen"
          },
          "attributeTypeId4": {
            "type": "integer",
            "description": "Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId",
            "format": "int64"
          },
          "attributeTypeName4": {
            "type": "string",
            "description": "Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen"
          },
          "attributeTypeId5": {
            "type": "integer",
            "description": "Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId",
            "format": "int64"
          },
          "attributeTypeName5": {
            "type": "string",
            "description": "Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen"
          },
          "attributeValue1": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Eigenschaftswert für das Attribut aus ProductType.attributeTypeId1. Kann, falls vorhanden, als 3. <a href=\"https://guide.itscope.com/kb/produktkategorien/\">Kategorieebene</a> verwendet werden."
          },
          "attributeValue2": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Eigenschaftswert für das Attribut aus ProductType.attributeTypeId2. Kann, falls vorhanden, als 4. <a href=\"https://guide.itscope.com/kb/produktkategorien/\">Kategorieebene</a> verwendet werden."
          },
          "attributeValue3": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Eigenschaftswert für das Attribut aus ProductType.attributeTypeId3. Kann, falls vorhanden, als 5. <a href=\"https://guide.itscope.com/kb/produktkategorien/\">Kategorieebene</a> verwendet werden."
          },
          "attributeValue4": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Eigenschaftswert für das Attribut aus ProductType.attributeTypeId4"
          },
          "attributeValue5": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Eigenschaftswert für das Attribut aus ProductType.attributeTypeId5"
          },
          "productSubTypeId": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "ID der Bauart-Eigenschaft"
          },
          "productSubType": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Bauart-Eigenschaft des Produktes, z.B. Maus oder Tastatur für Eingabegeräte. Sollte <b>nicht</b> als 3. <a href=\"https://guide.itscope.com/kb/produktkategorien/\">Kategorieebene</a> verwendet werden."
          },
          "productLineId": {
            "type": "integer",
            "description": "ID der Produktlinie",
            "format": "int64"
          },
          "productLine": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Produktlinie"
          },
          "productModel": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Produktmodellbezeichner"
          },
          "colorFamilyId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "ID der Farbfamilie"
          },
          "colorFamily": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Farbfamilie"
          },
          "estimateGrossWeight": {
            "type": "number",
            "description": "Gewicht in Kilogramm",
            "format": "double"
          },
          "grossDimX": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Länge des Produkts inklusive Maßeinheit"
          },
          "grossDimY": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Höhe des Produks inklusive Maßeinheit"
          },
          "grossDimZ": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Breite des Produkts inklusive Maßeinheit"
          },
          "combinedLengthAndGirth": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Gurtmaß"
          },
          "netWeight": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Nettogewicht"
          },
          "netDimX": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Nettomaß X"
          },
          "netDimY": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Nettomaß Y"
          },
          "netDimZ": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Nettomaß Z"
          },
          "valueAddedTaxGermany": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "description": "Deutscher Umsatzsteuersatz",
            "format": "int32"
          },
          "deeplink": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "Deeplink auf die ITscope.com Plattform"
          },
          "standardHtmlDatasheet": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "URL, Link auf HTML Standard-Datenblatt"
          },
          "standardPdfDatasheet": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "URL, Link auf PDF Standard-Datenblatt"
          },
          "manufacturerSite": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "URL, Link auf Herstellerseite"
          },
          "manufacturerDatasheet": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "URL, Link auf Herstellerdatenblatt"
          },
          "imageThumb": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Vorschau des besten <a href=\"https://guide.itscope.com/kb/produktbilder/\">Produktbildes</a>"
          },
          "imageThumbWidth": {
            "type": "integer",
            "description": "Breite des Bild Mediums in Pixel",
            "format": "int32"
          },
          "imageThumbHeight": {
            "type": "integer",
            "description": "Höhe des Bild Mediums in Pixel",
            "format": "int32"
          },
          "imageHighRes1": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Link auf ein hochaufgelöstes Produktbild?"
          },
          "imageWidth1": {
            "type": "integer",
            "description": "Breite des Bild Mediums in Pixel",
            "format": "int32"
          },
          "imageHeight1": {
            "type": "integer",
            "description": "Höhe des Bild Mediums in Pixel",
            "format": "int32"
          },
          "image2": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Link auf ein weiteres gutes <a href=\"https://guide.itscope.com/kb/produktbilder/\">Produktbild</a>, bevorzugt das einer Produktverpackung (nie das gleiche wie das erste Bild)"
          },
          "imageWidth2": {
            "type": "integer",
            "description": "Breite des Bild Mediums in Pixel",
            "format": "int32"
          },
          "imageHeight2": {
            "type": "integer",
            "description": "Höhe des Bild Mediums in Pixel",
            "format": "int32"
          },
          "image3": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Link auf erstes <a href=\"https://guide.itscope.com/kb/produktbilder/\">Bild</a> in der Galerie (niemals eines der bereits aufgeführten)"
          },
          "imageWidth3": {
            "type": "integer",
            "description": "Breite des Bild Mediums in Pixel",
            "format": "int32"
          },
          "imageHeight3": {
            "type": "integer",
            "description": "Höhe des Bild Mediums in Pixel",
            "format": "int32"
          },
          "image4": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Link auf zweites <a href=\"https://guide.itscope.com/kb/produktbilder/\">Bild</a> in der Galerie (niemals eines der bereits aufgeführten)"
          },
          "imageWidth4": {
            "type": "integer",
            "description": "Breite des Bild Mediums in Pixel",
            "format": "int32"
          },
          "imageHeight4": {
            "type": "integer",
            "description": "Höhe des Bild Mediums in Pixel",
            "format": "int32"
          },
          "image5": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Link auf drittes <a href=\"https://guide.itscope.com/kb/produktbilder/\">Bild</a> in der Galerie (niemals eines der bereits aufgeführten)"
          },
          "imageWidth5": {
            "type": "integer",
            "description": "Breite des Bild Mediums in Pixel",
            "format": "int32"
          },
          "imageHeight5": {
            "type": "integer",
            "description": "Höhe des Bild Mediums in Pixel",
            "format": "int32"
          },
          "energyLabel": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Link auf das Energielabel <a href=\"https://guide.itscope.com/kb/produktbilder/\">Bild</a>"
          },
          "energyEfficiencyClass": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Energieeffizienzklasse"
          },
          "entryDate": {
            "type": "string",
            "description": "Ab wann ist das Produkt auf der Plattform",
            "format": "date-time"
          },
          "rank": {
            "type": "integer",
            "description": "Allgemeiner Beliebtheitsrang (Rang 1 bis n, eine hohe Zahl entspricht einem schlechten Ranking)",
            "format": "int32"
          },
          "qualification": {
            "type": "integer",
            "description": "<a href=\"https://guide.itscope.com/kb/qualifizierung-des-produktes/\">Qualifizierung des Produkts</a>",
            "format": "int32"
          },
          "warrantyText": {
            "type": "string",
            "description": "<a href=\"https://guide.itscope.com/kb/produktbezeichner-und-produkttexte/\">Garantietext</a> des Produktes"
          },
          "marketingText": {
            "type": "string",
            "description": "<a href=\"https://guide.itscope.com/kb/produktbezeichner-und-produkttexte/\">Marketingtext</a> für das Produkt"
          },
          "keySellingPoints": {
            "type": "string",
            "description": "Key Selling Points"
          },
          "packageContents": {
            "type": "string",
            "description": "Lieferumfang"
          },
          "productFeatures": {
            "type": "string",
            "description": "Produktfeatures"
          },
          "htmlMainSpecs": {
            "type": "string",
            "description": "<a href=\"https://guide.itscope.com/kb/technische-eigenschaften-im-html-format-htmlspecs/\">Technische Eigenschaften</a> des Produktes in Kurzform, getrennt mit br-Tags"
          },
          "htmlSpecs": {
            "type": "string",
            "description": "<a href=\"https://guide.itscope.com/kb/technische-eigenschaften-im-html-format-htmlspecs/\">Technische Eigenschaften</a> des Produktes, im HTML Format"
          },
          "recommendedRetailPriceNet": {
            "type": "number",
            "description": "UVP des Herstellers",
            "format": "double"
          },
          "price": {
            "type": "number",
            "description": "Preisbasis für den <a href=\"https://guide.itscope.com/kb/herkunft-der-preis-und-bestandsinformation/\">kalkulierten Preis</a>"
          },
          "priceCalc": {
            "type": "number",
            "description": "Kalkulierter Preis, auf Grundlage der individuellen <a href=\"https://guide.itscope.com/kbtopic/preiskalkulation/\">Preiskalkulation</a>"
          },
          "currencyCode": {
            "type": "string",
            "description": "Währungseinheit, die für diese Preisinformation gilt"
          },
          "priceCalcVat": {
            "type": "number",
            "description": "Umsatzsteuersatz, der zur Berechnung des <a href=\"https://guide.itscope.com/kb/herkunft-der-preis-und-bestandsinformation/\">kalkulierten Preises</a> benutzt wurde"
          },
          "priceLastUpdate": {
            "type": "string",
            "description": "Zeitpunkt der letzten Aktualisierung der Preisinformation",
            "format": "date-time"
          },
          "priceSupplierId": {
            "type": "integer",
            "description": "Referenz auf einen Lieferanten (1:1), der die Bezugsquelle mit dieser Preisinformation bereitgestellt hat",
            "format": "int64"
          },
          "priceSupplierName": {
            "type": "string",
            "description": "Name des Lieferanten, der diese Bezugsquelle bereitgestellt hat"
          },
          "priceSupplierItemId": {
            "type": "integer",
            "description": "Referenz auf eine Bezugsquelle (n:1); wenn dieses Feld null ist, dann bezieht sich die Preisinformation auf ein Produkt (Bezugsquellenreferenz und Produktreferenz schließen sich gegenseitig aus)",
            "format": "int64"
          },
          "priceSupplierSKU": {
            "type": "string",
            "description": "Produktbezeichner des Lieferanten, der diese Bezugsquelle bereitgestellt hat"
          },
          "stockSupplierText": {
            "type": "string",
            "description": "Textuelle Bestandsinformation des Lieferanten, direkt übernommen, ohne Interpretation"
          },
          "stockStatus": {
            "type": "integer",
            "description": "Numerischer Schlüssel des <a href=\"https://guide.itscope.com/kb/verfuegbarkeitsstatus/\">Lieferstatus dieser Bestandsinformation</a>",
            "format": "int32"
          },
          "stockStatusText": {
            "type": "string",
            "description": "<a href=\"https://guide.itscope.com/kb/verfuegbarkeitsstatus/\">Lieferstatus dieser Bestandsinformation</a>, z.B. \"auf Lager\" oder \"im Außenlager\""
          },
          "stock": {
            "type": "integer",
            "description": "Bestandsmenge des in dieser Struktur angegebenen Lieferstatus",
            "format": "int32"
          },
          "externalStock": {
            "type": "integer",
            "description": "Im Außenlager befindliche Bestandsmenge (Zusatzinformation einiger Lieferanten in Strukturen des Lieferstatus \"auf Lager\")",
            "format": "int32"
          },
          "incomingStock": {
            "type": "integer",
            "description": "Im Zulauf befindliche Bestandsmenge  (Zusatzinformation einiger Lieferanten in Strukturen des Lieferstatus \"auf Lager\")",
            "format": "int32"
          },
          "stockAvailabilityDate": {
            "type": "string",
            "description": "Liefertermin für nicht auf Lager befindliche Ware",
            "format": "date-time"
          },
          "stockLastUpdate": {
            "type": "string",
            "description": "Zeitpunkt der letzten Aktualisierung der Bestandsinformation",
            "format": "date-time"
          },
          "aggregatedStatus": {
            "type": "integer",
            "description": "Bester Verfügbarkeitsstatus",
            "format": "int32"
          },
          "aggregatedStatusText": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Bester Verfügbarkeitsstatus"
          },
          "aggregatedStock": {
            "type": "integer",
            "description": "Summe aller Lagerbestände",
            "format": "int32"
          },
          "aggregatedSupplierItems": {
            "type": "integer",
            "description": "Summe aller Distributoren zu diesem Produkt",
            "format": "int32"
          },
          "contractTypeId": {
            "type": "integer",
            "description": "Der <a href=\"https://guide.itscope.com/kb/produktart/\">Vertragstyp</a> bei Lizenz- und Serviceprodukten",
            "format": "int32"
          },
          "contractTypeName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Der Name des <a href=\"https://guide.itscope.com/kb/produktart/\">Vertragstyps</a> bei Lizenz- und Serviceprodukten"
          },
          "priceBillingPeriod": {
            "type": "integer",
            "description": "Beschreibt die Länge des Zyklus des Abrechnungszeitraums",
            "format": "int32"
          },
          "priceBillingPeriodUnit": {
            "type": "string",
            "description": "Beschreibt die Zeiteinheit des Abrechnungszeitraums (z.B. \"Years\", \"Months\")"
          },
          "priceSubscriptionPeriod": {
            "type": "integer",
            "description": "Beschreibt die Länge der Vertragsdauer",
            "format": "int32"
          },
          "priceSubscriptionPeriodUnit": {
            "type": "string",
            "description": "Beschreibt die Zeiteinheit der Vertragsdauer (z.B. \"Years\", \"Months\")"
          },
          "supplierItem": {
            "type": "array",
            "xml": {
              "name": "supplierItems",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/supplierItem"
            }
          },
          "attribute": {
            "type": "array",
            "xml": {
              "name": "attributes",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/attribute"
            }
          },
          "attributeCluster": {
            "type": "array",
            "xml": {
              "name": "attributeClusters",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/attributeCluster"
            }
          },
          "accessory": {
            "type": "array",
            "xml": {
              "name": "accessories",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/accessory"
            }
          },
          "historicalDataItem": {
            "type": "array",
            "xml": {
              "name": "historicalDataItems",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/historicalDataItem"
            }
          },
          "supplierPackagingInfo": {
            "$ref": "#/components/schemas/supplierPackagingInfo"
          },
          "keyContent": {
            "type": "array",
            "xml": {
              "name": "keyContents",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/keyContent"
            }
          }
        },
        "description": "Produkt des ITscope-Katalogs.",
        "xml": {
          "name": "product"
        }
      },
      "project": {
        "required": [
          "manufacturerProjectId",
          "price",
          "remainingQuantity"
        ],
        "type": "object",
        "properties": {
          "supplierProjectId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Projektnummer des Lieferanten"
          },
          "manufacturerProjectId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Projektnummer des Herstellers (eindeutiger Key)"
          },
          "projectName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Projektbezeichnung"
          },
          "endCustomer": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Endkunde des Projektartikels"
          },
          "price": {
            "type": "number",
            "description": "Projektpreis"
          },
          "validFrom": {
            "type": "string",
            "description": "Datum, ab dem die Projektkonditionen gelten",
            "format": "date-time"
          },
          "validTo": {
            "type": "string",
            "description": "Datum, ab dem die Projektkonditionen ungültig werden",
            "format": "date-time"
          },
          "targetQuantity": {
            "type": "integer",
            "description": "Vereinbarte Menge im Projektrahmen",
            "format": "int32"
          },
          "remainingQuantity": {
            "type": "integer",
            "description": "Verbleibendes Kontingent",
            "format": "int32"
          },
          "minQuantity": {
            "type": "integer",
            "description": "Mindestbestellmenge für dieses Projekt",
            "format": "int32"
          },
          "projectLastUpdate": {
            "type": "string",
            "description": "Zeitpunkt der letzten Aktualisierung der Projektinformationen",
            "format": "date-time"
          }
        },
        "description": "Informationen, Preis und Verfügbarkeit eines Projektartikels"
      },
      "scaledPriceInfo": {
        "required": [
          "price",
          "scale",
          "supplierItemRefId"
        ],
        "type": "object",
        "properties": {
          "supplierItemRefId": {
            "type": "integer",
            "description": "Referenz auf die Bezugsquelle",
            "format": "int64"
          },
          "scale": {
            "type": "integer",
            "description": "Skalierung, ab wann Staffelpreis gilt",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "description": "Staffelpreis"
          }
        },
        "description": "Preisinformatinen über Staffelpreise"
      },
      "supplierItem": {
        "required": [
          "conditionId",
          "conditionName",
          "eanValid",
          "eolProduct",
          "id",
          "matchQuality",
          "specialOffer",
          "supplierId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Eindeutiger Key",
            "format": "int64"
          },
          "ean": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string",
            "description": "EAN-Angabe des Lieferanten"
          },
          "manufacturerSKU": {
            "maxLength": 150,
            "minLength": 0,
            "type": "string",
            "description": "Hersteller-Artikelnummer-Angabe des Lieferanten (muss nicht mit ITscope übereinstimmen)"
          },
          "supplierSKU": {
            "maxLength": 150,
            "minLength": 0,
            "type": "string",
            "description": "Produktnummer des Lieferanten"
          },
          "supplierId": {
            "type": "integer",
            "description": "Verweist 1:1 auf Supplier.id",
            "format": "int64"
          },
          "supplierName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name des Lieferanten"
          },
          "manufacturerName": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "description": "Herstellername wie beim Lieferant angegeben"
          },
          "productName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Genauer Bezeichner des Artikels, wie vom Lieferanten übermittelt"
          },
          "longDescription": {
            "maxLength": 60000,
            "minLength": 0,
            "type": "string",
            "description": "Erweiterte Artikelbeschreibung des Lieferanten"
          },
          "conditionId": {
            "type": "integer",
            "description": "Numerischer Code des <a href=\"https://guide.itscope.com/kb/artikelzustandcodes/\">Zustand des Artikels</a>",
            "format": "int32"
          },
          "conditionName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "<a href=\"https://guide.itscope.com/kb/artikelzustandcodes/\">Zustand des Artikels</a> (neu, gebraucht, B-Ware, Refurbished, usw.)"
          },
          "eolProduct": {
            "type": "boolean",
            "description": "Kennung: Auslaufartikel"
          },
          "matchQuality": {
            "type": "integer",
            "description": "<a href=\"https://guide.itscope.com/kb/zuordnungsqualitaet/\">Zuordnungsqualität</a> des Artikels zum ITscope-Produktkatalog",
            "format": "int32"
          },
          "eanValid": {
            "type": "boolean",
            "description": "Flag, ob die EAN des Lieferanten valide nach den EAN-Kriterien ist"
          },
          "specialOffer": {
            "type": "boolean",
            "description": "Flag, ob Artikel Sonderangebot ist"
          },
          "promotion": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Name der Promo-Aktion des Lieferanten"
          },
          "vat": {
            "type": "integer",
            "description": "MwSt-Satz für den Artikel",
            "format": "int32"
          },
          "copyrightLevy": {
            "type": "number",
            "description": "Urheberrechtsabgabe",
            "format": "double"
          },
          "customsTariffNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Zolltarifnummer"
          },
          "countryOfOrigin": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Ursprungsland des Artikels"
          },
          "grossDimX": {
            "type": "number",
            "description": "LÄnge des Produkts inklusive Maßeinheit",
            "format": "double"
          },
          "grossDimY": {
            "type": "number",
            "description": "Höhe des Produks inklusive Maßeinheit",
            "format": "double"
          },
          "grossDimZ": {
            "type": "number",
            "description": "Breite des Produkts inklusive Maßeinheit",
            "format": "double"
          },
          "warrantyText": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Garantieangaben des Lieferanten"
          },
          "deeplink": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Link zum Artikel beim Lieferanten"
          },
          "recommendedRetailPriceNet": {
            "type": "number",
            "description": "UVP-Angabe des Lieferanten",
            "format": "double"
          },
          "price": {
            "type": "number",
            "description": "Preis"
          },
          "priceCalc": {
            "type": "number",
            "description": "Kalkulierter Preis, auf Grundlage der individuellen <a href=\"https://guide.itscope.com/kbtopic/preiskalkulation/\">Preiskalkulation</a>"
          },
          "currencyCode": {
            "type": "string",
            "description": "Währungseinheit, die für diese Preisinformation gilt"
          },
          "priceCalcVat": {
            "type": "number",
            "description": "Umsatzsteuersatz, der zur Berechnung des <a href=\"https://guide.itscope.com/kb/herkunft-der-preis-und-bestandsinformation/\">kalkulierten Preises</a> benutzt wurde"
          },
          "priceLastUpdate": {
            "type": "string",
            "description": "Zeitpunkt der letzten Aktualisierung der Preisinformation",
            "format": "date-time"
          },
          "stockSupplierText": {
            "type": "string",
            "description": "Bestandsinformation zur Bezugsquelle, wie vom Lieferanten übermittelt"
          },
          "stockStatus": {
            "type": "integer",
            "description": "Numerischer Schlüssel des <a href=\"https://guide.itscope.com/kb/verfuegbarkeitsstatus/\">Lieferstatus dieser Bestandsinformation</a>",
            "format": "int32"
          },
          "stockStatusText": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "<a href=\"https://guide.itscope.com/kb/verfuegbarkeitsstatus/\">Lieferstatus dieser Bestandsinformation</a>, z.B. \"auf Lager\" oder \"im Außenlager\""
          },
          "stock": {
            "type": "integer",
            "description": "Bestandsmenge",
            "format": "int32"
          },
          "externalStock": {
            "type": "integer",
            "description": "Im Außenlager befindliche Bestandsmenge (Zusatzinformation einiger Lieferanten in Strukturen des Lieferstatus \"auf Lager\")",
            "format": "int32"
          },
          "incomingStock": {
            "type": "integer",
            "description": "Im Zulauf befindliche Bestandsmenge  (Zusatzinformation einiger Lieferanten in Strukturen des Lieferstatus \"auf Lager\")",
            "format": "int32"
          },
          "stockAvailabilityDate": {
            "type": "string",
            "description": "Liefertermin für nicht auf Lager befindliche Ware",
            "format": "date-time"
          },
          "lastStockUpdate": {
            "type": "string",
            "description": "Zeitpunkt der letzten Aktualisierung der Bestandsinformation",
            "format": "date-time"
          },
          "contractTypeId": {
            "type": "integer",
            "description": "Der <a href=\"https://guide.itscope.com/kb/produktart/\">Vertragstyp</a> bei Lizenz- und Serviceprodukten",
            "format": "int32"
          },
          "contractTypeName": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Der Name des <a href=\"https://guide.itscope.com/kb/produktart/\">Vertragstyps</a> bei Lizenz- und Serviceprodukten"
          },
          "priceBillingPeriod": {
            "type": "integer",
            "description": "Beschreibt die Länge des Zyklus des Abrechnungszeitraums",
            "format": "int32"
          },
          "priceBillingPeriodUnit": {
            "type": "string",
            "description": "Beschreibt die Zeiteinheit des Abrechnungszeitraums (z.B. \"Years\", \"Months\")"
          },
          "priceSubscriptionPeriod": {
            "type": "integer",
            "description": "Beschreibt die Länge der Vertragsdauer",
            "format": "int32"
          },
          "priceSubscriptionPeriodUnit": {
            "type": "string",
            "description": "Beschreibt die Zeiteinheit der Vertragsdauer (z.B. \"Years\", \"Months\")"
          },
          "weeeRegNo": {
            "type": "string",
            "description": "Die WEEE-Reg.-Nr. des Artikels (nach §6 ElektroG)"
          },
          "contractParameter": {
            "type": "array",
            "xml": {
              "name": "contractParameters",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/contractParameter"
            }
          },
          "project": {
            "type": "array",
            "xml": {
              "name": "projects",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/project"
            }
          },
          "supplierPackagingInfo": {
            "$ref": "#/components/schemas/supplierPackagingInfo"
          },
          "scaledPriceInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/scaledPriceInfo"
            }
          }
        },
        "description": "Bezugsquelle eines ITscope-Produkts. Ein konkretes Angebot eines auf ITscope gelisteten Distributors."
      },
      "supplierPackagingInfo": {
        "type": "object",
        "properties": {
          "contentUnit": {
            "type": "string",
            "description": "Einheit der Inhalte einer Verpackung"
          },
          "intervalQuantity": {
            "type": "integer",
            "description": "Zahl, die angibt, in welcher Staffelung der Artikel bestellt werden kann (in Bestelleinheiten)",
            "format": "int32"
          },
          "minQuantity": {
            "type": "integer",
            "description": "Minimale Anzahl an Verpackungseinheiten um eine Bestellung auszulösen",
            "format": "int32"
          },
          "numberContentUnitPerOrderUnit": {
            "type": "integer",
            "description": "Anzahl der Inhalte einer Verpackungseinheit",
            "format": "int32"
          },
          "orderUnit": {
            "type": "string",
            "description": "Verpackungseinheit"
          },
          "priceQuantity": {
            "type": "integer",
            "description": "Anzahl der Verpackungseinheiten für einen gegebenen Preis",
            "format": "int32"
          },
          "supplierPackingQuantity": {
            "type": "integer",
            "description": "Anzahl der Verpackungseinheiten die ein Lieferant in einer Bestellung zur Verfügung stellt",
            "format": "int32"
          }
        },
        "description": "Auflistung aller Verpackungsinformationen wenn vom Lieferant gesetzt"
      },
      "attributeType": {
        "required": [
          "attributeUnit"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Eindeutige Kennung eines konkreten Eigenschafttyps",
            "format": "int64"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name des konkreten Eigenschafttyps"
          },
          "rank": {
            "type": "integer",
            "description": "Ranking des Eigenschafttyps, kann z.B. zur Sortierung verwendet werden",
            "format": "int64"
          },
          "type": {
            "type": "integer",
            "description": "<a href=\"https://guide.itscope.com/kb/datentypen-einzelner-eigenschaften/\">Datentyp</a> des Eigenschafttyps",
            "format": "int32"
          },
          "attributeUnit": {
            "$ref": "#/components/schemas/attributeUnit"
          },
          "groupId": {
            "type": "integer",
            "description": "Kennung einer Eigenschaftsgruppe, kein Tabellenverweis, sondern identifiziert attributeTypeGroupName eindeutig",
            "format": "int64"
          },
          "groupName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name der Eigenschaftsgruppe"
          }
        },
        "description": "Konkrete Eigenschaftstypen von Produkteigenschaften."
      },
      "attributeUnit": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Eindeutige Kennung einer Einheit"
          },
          "baseUnitId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Die <a href=\"'https://guide.itscope.com/kb/einheiten-fuer-produkteigenschaften-vom-typ-zahl/\">Basiseinheit</a> der Einheit"
          },
          "mulFactor": {
            "type": "integer",
            "description": "Multiplikationsfaktor für die Umrechnung von Basiseinheit auf Einheit",
            "format": "int64"
          },
          "divFactor": {
            "type": "integer",
            "description": "Divisor für die Umrechnung von Basiseinheit auf Einheit",
            "format": "int64"
          }
        },
        "description": "Einheiten aller konkreten Eigenschaftstypen."
      },
      "productType": {
        "required": [
          "id",
          "name",
          "productTypeGroup"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Eindeutiger Key",
            "format": "int64"
          },
          "productTypeGroup": {
            "$ref": "#/components/schemas/productTypeGroup"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Bezeichner des Produkttyps. Kann als 2. <a href=\"https://guide.itscope.com/kb/produktkategorien/\">Kategorieebene</a> verwendet werden."
          },
          "attributeTypeId1": {
            "type": "integer",
            "description": "Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId",
            "format": "int64"
          },
          "attributeTypeName1": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen"
          },
          "attributeTypeId2": {
            "type": "integer",
            "description": "Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId",
            "format": "int64"
          },
          "attributeTypeName2": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen"
          },
          "attributeTypeId3": {
            "type": "integer",
            "description": "Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId",
            "format": "int64"
          },
          "attributeTypeName3": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen"
          },
          "attributeTypeId4": {
            "type": "integer",
            "description": "Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId",
            "format": "int64"
          },
          "attributeTypeName4": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen"
          },
          "attributeTypeId5": {
            "type": "integer",
            "description": "Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId",
            "format": "int64"
          },
          "attributeTypeName5": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen"
          },
          "attributeType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/attributeType"
            }
          }
        },
        "description": "Typ eines Produkts, z.B. Server, Prozessor.",
        "xml": {
          "name": "productType"
        }
      },
      "productTypeGroup": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Eindeutiger Key"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name der Gruppe von Produkttypen, z.B. Netzwerktechnik. Kann als 1. <a href=\"https://guide.itscope.com/kb/produktkategorien/\">Kategorieebene</a> verwendet werden."
          }
        },
        "description": "Produkttyp-Gruppierung."
      },
      "quote": {
        "type": "object",
        "properties": {
          "quoteId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Eindeutiger Key des Angebots (intern)"
          },
          "quoteNo": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Angebotsnummer, wie sie auf dem Dokument angezeigt wird"
          },
          "shortUrl": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "description": "Individueller Link auf das Angebot, für den Empfänger des Angebots"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Vom Ersteller des Angebots vergebener Name"
          },
          "status": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Zustand des Angebots, z.B. \"In Verhandlung\""
          },
          "lastModified": {
            "type": "string",
            "description": "Letztes Änderungsdatum",
            "format": "date-time"
          },
          "validUntil": {
            "type": "string",
            "description": "Gültigkeitsdatum, bis zu welchem das Angebot gilt",
            "format": "date-time"
          },
          "organisation": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name der Organisation, an die das Angebot gerichtet ist"
          },
          "person": {
            "maxLength": 511,
            "minLength": 0,
            "type": "string",
            "description": "Name des Empfängers (Vor- und Nachname)"
          },
          "itemCount": {
            "type": "integer",
            "description": "Anzahl der Positionen im Angebot (inklusive optionalen Positionen)",
            "format": "int32"
          },
          "deeplink": {
            "type": "string",
            "description": "Deeplink zum Angebot"
          },
          "documentUrl": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "<a href=\"https://guide.itscope.com/kb/business-documents-methode/\">API Business Dokumente Url</a> für den Download des Dokuments."
          },
          "archived": {
            "type": "boolean",
            "description": "Archivflag des Angebots"
          },
          "customerNumber": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Kundennummer des Angebots"
          },
          "creator": {
            "maxLength": 511,
            "minLength": 0,
            "type": "string",
            "description": "Ersteller des Angebots"
          },
          "totalPrice": {
            "type": "number",
            "description": "Gesamtbetrag des Angebots (brutto)"
          }
        },
        "description": "Detailinformationen zu einem Angebot",
        "xml": {
          "name": "quote"
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "http",
        "description": "Authentifizierung mit ITscope Account ID und API Key",
        "scheme": "basic"
      }
    }
  }
}