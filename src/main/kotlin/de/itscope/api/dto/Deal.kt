/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package de.itscope.api.dto

import de.itscope.api.dto.Buyer
import de.itscope.api.dto.Dispatchnotification
import de.itscope.api.dto.Invoice
import de.itscope.api.dto.Order
import de.itscope.api.dto.Orderresponse
import de.itscope.api.dto.Payment
import de.itscope.api.dto.Vendor

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Detailinformationen zu einem Auftrag, Bestellung
 *
 * @param vendor 
 * @param orderId Eindeutiger Key der Bestellung (intern)
 * @param ownOrderId Individuelle Bestellnummer des Bestellers
 * @param customerOrderId Individuelle Bestellnummer des Endkunden
 * @param cartId Warenkorb-ID des Deals, in dem sich die Bestellung befindet
 * @param status Kennung des Zustandes, in dem sich die Bestellung befindet, z.B. SENT
 * @param statusMessage Textuelle Zustandsbeschreibung
 * @param statusDate Letztes Änderungsdatum der Bestellung
 * @param archived Archivflag der Bestellung
 * @param deeplink Deeplink zur Bestellung
 * @param imported per API importiert
 * @param automated per Automation erstellt
 * @param businessType PURCHASE bei ausgehender Bestellung, SALE bei eingehendem Auftrag
 * @param b2bOrder per B2B-Suite erstellt
 * @param testOrder Test-Flag der Bestellung
 * @param buyer 
 * @param order 
 * @param orderresponse 
 * @param dispatchnotification 
 * @param invoice 
 * @param payment 
 */


data class Deal (

    @get:JsonProperty("vendor")
    val vendor: Vendor,

    /* Eindeutiger Key der Bestellung (intern) */
    @get:JsonProperty("orderId")
    val orderId: kotlin.String? = null,

    /* Individuelle Bestellnummer des Bestellers */
    @get:JsonProperty("ownOrderId")
    val ownOrderId: kotlin.String? = null,

    /* Individuelle Bestellnummer des Endkunden */
    @get:JsonProperty("customerOrderId")
    val customerOrderId: kotlin.String? = null,

    /* Warenkorb-ID des Deals, in dem sich die Bestellung befindet */
    @get:JsonProperty("cartId")
    val cartId: kotlin.String? = null,

    /* Kennung des Zustandes, in dem sich die Bestellung befindet, z.B. SENT */
    @get:JsonProperty("status")
    val status: kotlin.String? = null,

    /* Textuelle Zustandsbeschreibung */
    @get:JsonProperty("statusMessage")
    val statusMessage: kotlin.String? = null,

    /* Letztes Änderungsdatum der Bestellung */
    @get:JsonProperty("statusDate")
    val statusDate: java.time.OffsetDateTime? = null,

    /* Archivflag der Bestellung */
    @get:JsonProperty("archived")
    val archived: kotlin.Boolean? = null,

    /* Deeplink zur Bestellung */
    @get:JsonProperty("deeplink")
    val deeplink: kotlin.String? = null,

    /* per API importiert */
    @get:JsonProperty("imported")
    val imported: kotlin.Boolean? = null,

    /* per Automation erstellt */
    @get:JsonProperty("automated")
    val automated: kotlin.Boolean? = null,

    /* PURCHASE bei ausgehender Bestellung, SALE bei eingehendem Auftrag */
    @get:JsonProperty("businessType")
    val businessType: kotlin.String? = null,

    /* per B2B-Suite erstellt */
    @get:JsonProperty("b2bOrder")
    val b2bOrder: kotlin.Boolean? = null,

    /* Test-Flag der Bestellung */
    @get:JsonProperty("testOrder")
    val testOrder: kotlin.Boolean? = null,

    @get:JsonProperty("buyer")
    val buyer: Buyer? = null,

    @get:JsonProperty("order")
    val order: kotlin.collections.List<Order>? = null,

    @get:JsonProperty("orderresponse")
    val orderresponse: kotlin.collections.List<Orderresponse>? = null,

    @get:JsonProperty("dispatchnotification")
    val dispatchnotification: kotlin.collections.List<Dispatchnotification>? = null,

    @get:JsonProperty("invoice")
    val invoice: kotlin.collections.List<Invoice>? = null,

    @get:JsonProperty("payment")
    val payment: Payment? = null

) {


}

