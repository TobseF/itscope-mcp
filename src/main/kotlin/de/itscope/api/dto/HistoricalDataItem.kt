/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package de.itscope.api.dto


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Wöchentlich oder monatlich aggregierte historische Daten, abhängig vom gewünschten Zeitraum und Aggregation
 *
 * @param date Startdatum der Woche oder Monat abhängig von der gewünschten Aggregation
 * @param priceMin Preis Minimum innerhalb eines entsprechenden Zeitraums
 * @param priceMax Preis Maximum innerhalb eines entsprechenden Zeitraums
 * @param priceMedian Preis Median innerhalb eines entsprechenden Zeitraums
 * @param priceMedianInStock Preis Median für lagernde Artikel innerhalb eines entsprechenden Zeitraums
 * @param priceAvg Preis Durchschnitt innerhalb eines entsprechenden Zeitraums
 * @param priceAvgInStock Preis Durchschnitt für lagernde Artikel innerhalb eines entsprechenden Zeitraums
 * @param supplierCount Anzahl der Lieferanten innerhalb eines entsprechenden Zeitraums
 * @param supplierCountInStock Anzahl der Lieferanten mit Lagerbestand innerhalb eines entsprechenden Zeitraums
 * @param stockSum Summe der Lagerartikel innerhalb eines entsprechenden Zeitraums
 * @param salesTrend Verkaufstendenz innerhalb eines entsprechenden Zeitraums
 */


data class HistoricalDataItem (

    /* Startdatum der Woche oder Monat abhängig von der gewünschten Aggregation */
    @get:JsonProperty("date")
    val date: kotlin.String? = null,

    /* Preis Minimum innerhalb eines entsprechenden Zeitraums */
    @get:JsonProperty("priceMin")
    val priceMin: java.math.BigDecimal? = null,

    /* Preis Maximum innerhalb eines entsprechenden Zeitraums */
    @get:JsonProperty("priceMax")
    val priceMax: java.math.BigDecimal? = null,

    /* Preis Median innerhalb eines entsprechenden Zeitraums */
    @get:JsonProperty("priceMedian")
    val priceMedian: java.math.BigDecimal? = null,

    /* Preis Median für lagernde Artikel innerhalb eines entsprechenden Zeitraums */
    @get:JsonProperty("priceMedianInStock")
    val priceMedianInStock: java.math.BigDecimal? = null,

    /* Preis Durchschnitt innerhalb eines entsprechenden Zeitraums */
    @get:JsonProperty("priceAvg")
    val priceAvg: java.math.BigDecimal? = null,

    /* Preis Durchschnitt für lagernde Artikel innerhalb eines entsprechenden Zeitraums */
    @get:JsonProperty("priceAvgInStock")
    val priceAvgInStock: java.math.BigDecimal? = null,

    /* Anzahl der Lieferanten innerhalb eines entsprechenden Zeitraums */
    @get:JsonProperty("supplierCount")
    val supplierCount: kotlin.Int? = null,

    /* Anzahl der Lieferanten mit Lagerbestand innerhalb eines entsprechenden Zeitraums */
    @get:JsonProperty("supplierCountInStock")
    val supplierCountInStock: kotlin.Int? = null,

    /* Summe der Lagerartikel innerhalb eines entsprechenden Zeitraums */
    @get:JsonProperty("stockSum")
    val stockSum: kotlin.Int? = null,

    /* Verkaufstendenz innerhalb eines entsprechenden Zeitraums */
    @get:JsonProperty("salesTrend")
    val salesTrend: kotlin.Int? = null

) {


}

