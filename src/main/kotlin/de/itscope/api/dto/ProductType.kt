/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package de.itscope.api.dto

import de.itscope.api.dto.AttributeType
import de.itscope.api.dto.ProductTypeGroup

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Typ eines Produkts, z.B. Server, Prozessor.
 *
 * @param id Eindeutiger Key
 * @param productTypeGroup 
 * @param name Bezeichner des Produkttyps. Kann als 2. <a href=\"https://guide.itscope.com/kb/produktkategorien/\">Kategorieebene</a> verwendet werden.
 * @param attributeTypeId1 Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId
 * @param attributeTypeName1 Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen
 * @param attributeTypeId2 Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId
 * @param attributeTypeName2 Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen
 * @param attributeTypeId3 Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId
 * @param attributeTypeName3 Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen
 * @param attributeTypeId4 Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId
 * @param attributeTypeName4 Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen
 * @param attributeTypeId5 Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId
 * @param attributeTypeName5 Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen
 * @param attributeType 
 */


data class ProductType (

    /* Eindeutiger Key */
    @get:JsonProperty("id")
    val id: kotlin.Long,

    @get:JsonProperty("productTypeGroup")
    val productTypeGroup: ProductTypeGroup,

    /* Bezeichner des Produkttyps. Kann als 2. <a href=\"https://guide.itscope.com/kb/produktkategorien/\">Kategorieebene</a> verwendet werden. */
    @get:JsonProperty("name")
    val name: kotlin.String,

    /* Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId */
    @get:JsonProperty("attributeTypeId1")
    val attributeTypeId1: kotlin.Long? = null,

    /* Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen */
    @get:JsonProperty("attributeTypeName1")
    val attributeTypeName1: kotlin.String? = null,

    /* Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId */
    @get:JsonProperty("attributeTypeId2")
    val attributeTypeId2: kotlin.Long? = null,

    /* Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen */
    @get:JsonProperty("attributeTypeName2")
    val attributeTypeName2: kotlin.String? = null,

    /* Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId */
    @get:JsonProperty("attributeTypeId3")
    val attributeTypeId3: kotlin.Long? = null,

    /* Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen */
    @get:JsonProperty("attributeTypeName3")
    val attributeTypeName3: kotlin.String? = null,

    /* Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId */
    @get:JsonProperty("attributeTypeId4")
    val attributeTypeId4: kotlin.Long? = null,

    /* Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen */
    @get:JsonProperty("attributeTypeName4")
    val attributeTypeName4: kotlin.String? = null,

    /* Eindeutiger Attribut Key, um eine mögliche Unterkategorie aufzubauen, verweist 1:n auf AttributeCluster.attributeTypeId */
    @get:JsonProperty("attributeTypeId5")
    val attributeTypeId5: kotlin.Long? = null,

    /* Bezeichner des Attributes, um eine mögliche Unterkategorie aufzubauen */
    @get:JsonProperty("attributeTypeName5")
    val attributeTypeName5: kotlin.String? = null,

    @get:JsonProperty("attributeType")
    val attributeType: kotlin.collections.List<AttributeType>? = null

) {


}

